

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Apr 11 16:55:24 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     _TMR3	set	4018
    44  0000                     _ADCON0bits	set	4034
    45  0000                     _ADCON1bits	set	4033
    46  0000                     _ADCON2bits	set	4032
    47  0000                     _ADRESH	set	4036
    48  0000                     _ADRESL	set	4035
    49  0000                     _INTCONbits	set	4082
    50  0000                     _IPR1bits	set	3999
    51  0000                     _IPR2bits	set	4002
    52  0000                     _OSCCONbits	set	4051
    53  0000                     _OSCTUNEbits	set	3995
    54  0000                     _PIE1bits	set	3997
    55  0000                     _PIE2bits	set	4000
    56  0000                     _PIR1bits	set	3998
    57  0000                     _PIR2bits	set	4001
    58  0000                     _PORTAbits	set	3968
    59  0000                     _RCONbits	set	4048
    60  0000                     _RCREG	set	4014
    61  0000                     _RCSTAbits	set	4011
    62  0000                     _SPBRG	set	4015
    63  0000                     _SPBRGH	set	4016
    64  0000                     _SSPADD	set	4040
    65  0000                     _SSPBUF	set	4041
    66  0000                     _SSPCON1bits	set	4038
    67  0000                     _SSPCON2	set	4037
    68  0000                     _SSPCON2bits	set	4037
    69  0000                     _SSPSTATbits	set	4039
    70  0000                     _T3CON	set	4017
    71  0000                     _T3CONbits	set	4017
    72  0000                     _TRISAbits	set	3986
    73  0000                     _TRISCbits	set	3988
    74  0000                     _TXREG	set	4013
    75  0000                     _TXSTAbits	set	4012
    76  0000                     _BRG16	set	32195
    77  0000                     _TRMT	set	32097
    78                           
    79                           	psect	smallconst
    80  000600                     __psmallconst:
    81                           	opt stack 0
    82  000600  00                 	db	0
    83  000601                     STR_7:
    84  000601  64                 	db	100	;'d'
    85  000602  65                 	db	101	;'e'
    86  000603  6C                 	db	108	;'l'
    87  000604  61                 	db	97	;'a'
    88  000605  79                 	db	121	;'y'
    89  000606  65                 	db	101	;'e'
    90  000607  64                 	db	100	;'d'
    91  000608  3F                 	db	63	;'?'
    92  000609  0A                 	db	10
    93  00060A  00                 	db	0
    94  00060B                     STR_5:
    95  00060B  43                 	db	67	;'C'
    96  00060C  6F                 	db	111	;'o'
    97  00060D  75                 	db	117	;'u'
    98  00060E  6E                 	db	110	;'n'
    99  00060F  74                 	db	116	;'t'
   100  000610  3A                 	db	58	;':'
   101  000611  00                 	db	0
   102  000612                     STR_3:
   103  000612  4C                 	db	76	;'L'
   104  000613  53                 	db	83	;'S'
   105  000614  42                 	db	66	;'B'
   106  000615  31                 	db	49	;'1'
   107  000616  3A                 	db	58	;':'
   108  000617  00                 	db	0
   109  000618                     STR_1:
   110  000618  4D                 	db	77	;'M'
   111  000619  53                 	db	83	;'S'
   112  00061A  42                 	db	66	;'B'
   113  00061B  31                 	db	49	;'1'
   114  00061C  3A                 	db	58	;':'
   115  00061D  00                 	db	0
   116  00061E                     STR_4:
   117  00061E  4C                 	db	76	;'L'
   118  00061F  53                 	db	83	;'S'
   119  000620  42                 	db	66	;'B'
   120  000621  32                 	db	50	;'2'
   121  000622  3A                 	db	58	;':'
   122  000623  00                 	db	0
   123  000624                     STR_2:
   124  000624  4D                 	db	77	;'M'
   125  000625  53                 	db	83	;'S'
   126  000626  42                 	db	66	;'B'
   127  000627  32                 	db	50	;'2'
   128  000628  3A                 	db	58	;':'
   129  000629  00                 	db	0
   130  00062A                     STR_6:
   131  00062A  54                 	db	84	;'T'
   132  00062B  4D                 	db	77	;'M'
   133  00062C  52                 	db	82	;'R'
   134  00062D  33                 	db	51	;'3'
   135  00062E  3A                 	db	58	;':'
   136  00062F  00                 	db	0
   137  000630                     STR_9:
   138  000630  4C                 	db	76	;'L'
   139  000631  53                 	db	83	;'S'
   140  000632  42                 	db	66	;'B'
   141  000633  3A                 	db	58	;':'
   142  000634  00                 	db	0
   143  000635                     STR_8:
   144  000635  4D                 	db	77	;'M'
   145  000636  53                 	db	83	;'S'
   146  000637  42                 	db	66	;'B'
   147  000638  3A                 	db	58	;':'
   148  000639  00                 	db	0
   149                           
   150                           ; #config settings
   151  00063A  00                 	db	0	; dummy byte at the end
   152  0000                     
   153                           	psect	cinit
   154  0010E8                     __pcinit:
   155                           	opt stack 0
   156  0010E8                     start_initialization:
   157                           	opt stack 0
   158  0010E8                     __initialization:
   159                           	opt stack 0
   160                           
   161                           ; Clear objects allocated to COMRAM (12 bytes)
   162  0010E8  EE00  F051         	lfsr	0,__pbssCOMRAM
   163  0010EC  0E0C               	movlw	12
   164  0010EE                     clear_0:
   165  0010EE  6AEE               	clrf	postinc0,c
   166  0010F0  06E8               	decf	wreg,f,c
   167  0010F2  E1FD               	bnz	clear_0
   168  0010F4                     end_of_initialization:
   169                           	opt stack 0
   170  0010F4                     __end_of__initialization:
   171                           	opt stack 0
   172  0010F4  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   173  0010F6  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   174  0010F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   175  0010FA  6EF8               	movwf	tblptru,c
   176  0010FC  0100               	movlb	0
   177  0010FE  EFEA  F003         	goto	_main	;jump to C main() function
   178                           tblptru	equ	0xFF8
   179                           postinc0	equ	0xFEE
   180                           wreg	equ	0xFE8
   181                           
   182                           	psect	bssCOMRAM
   183  000051                     __pbssCOMRAM:
   184                           	opt stack 0
   185  000051                     _count:
   186                           	opt stack 0
   187  000051                     	ds	2
   188  000053                     _ackflag:
   189                           	opt stack 0
   190  000053                     	ds	1
   191  000054                     _adcflag:
   192                           	opt stack 0
   193  000054                     	ds	1
   194  000055                     _b_error:
   195                           	opt stack 0
   196  000055                     	ds	1
   197  000056                     _con_sen:
   198                           	opt stack 0
   199  000056                     	ds	1
   200  000057                     _data:
   201                           	opt stack 0
   202  000057                     	ds	1
   203  000058                     _data_rdy:
   204                           	opt stack 0
   205  000058                     	ds	1
   206  000059                     _en_read:
   207                           	opt stack 0
   208  000059                     	ds	1
   209  00005A                     _garb:
   210                           	opt stack 0
   211  00005A                     	ds	1
   212  00005B                     fdcRead@val:
   213                           	opt stack 0
   214  00005B                     	ds	2
   215                           tblptru	equ	0xFF8
   216                           postinc0	equ	0xFEE
   217                           wreg	equ	0xFE8
   218                           
   219                           	psect	cstackBANK0
   220  000080                     __pcstackBANK0:
   221                           	opt stack 0
   222  000080                     writeVal@buffer:
   223                           	opt stack 0
   224                           
   225                           ; 20 bytes @ 0x0
   226  000080                     	ds	20
   227  000094                     ??_main:
   228                           
   229                           ; 0 bytes @ 0x14
   230  000094                     	ds	1
   231  000095                     main@capstat:
   232                           	opt stack 0
   233                           
   234                           ; 2 bytes @ 0x15
   235  000095                     	ds	2
   236  000097                     main@cmd:
   237                           	opt stack 0
   238                           
   239                           ; 1 bytes @ 0x17
   240  000097                     	ds	1
   241                           tblptru	equ	0xFF8
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           
   245                           	psect	cstackCOMRAM
   246  000001                     __pcstackCOMRAM:
   247                           	opt stack 0
   248  000001                     i1writeChar@c:
   249                           	opt stack 0
   250                           
   251                           ; 1 bytes @ 0x0
   252  000001                     	ds	1
   253  000002                     ??_lowISR:
   254                           
   255                           ; 0 bytes @ 0x1
   256  000002                     	ds	19
   257  000015                     ??_i2cISR:
   258                           
   259                           ; 0 bytes @ 0x14
   260  000015                     	ds	14
   261  000023                     ??_i2cIdle:
   262  000023                     ?_adcRead:
   263                           	opt stack 0
   264  000023                     ?___ftpack:
   265                           	opt stack 0
   266  000023                     ?___lldiv:
   267                           	opt stack 0
   268  000023                     ?___llmod:
   269                           	opt stack 0
   270  000023                     writeChar@c:
   271                           	opt stack 0
   272  000023                     ___ftpack@arg:
   273                           	opt stack 0
   274  000023                     ___lldiv@dividend:
   275                           	opt stack 0
   276  000023                     ___llmod@dividend:
   277                           	opt stack 0
   278                           
   279                           ; 4 bytes @ 0x22
   280  000023                     	ds	1
   281  000024                     i2cStart@input:
   282                           	opt stack 0
   283  000024                     writeStr@str:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0x23
   287  000024                     	ds	1
   288  000025                     ??_adcRead:
   289                           
   290                           ; 0 bytes @ 0x24
   291  000025                     	ds	1
   292  000026                     ??_writeStr:
   293  000026                     adcRead@channel:
   294                           	opt stack 0
   295  000026                     i2cStart@len:
   296                           	opt stack 0
   297  000026                     ___ftpack@exp:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x25
   301  000026                     	ds	1
   302  000027                     ??_i2cStart:
   303  000027                     ___ftpack@sign:
   304                           	opt stack 0
   305  000027                     adcRead@val:
   306                           	opt stack 0
   307  000027                     ___lldiv@divisor:
   308                           	opt stack 0
   309  000027                     ___llmod@divisor:
   310                           	opt stack 0
   311                           
   312                           ; 4 bytes @ 0x26
   313  000027                     	ds	1
   314  000028                     ??___ftpack:
   315  000028                     writeStr@i:
   316                           	opt stack 0
   317                           
   318                           ; 1 bytes @ 0x27
   319  000028                     	ds	2
   320  00002A                     i2cStart@i:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x29
   324  00002A                     	ds	1
   325  00002B                     ?___lwtoft:
   326                           	opt stack 0
   327  00002B                     ___llmod@counter:
   328                           	opt stack 0
   329  00002B                     ___lwtoft@c:
   330                           	opt stack 0
   331  00002B                     ___lldiv@quotient:
   332                           	opt stack 0
   333                           
   334                           ; 4 bytes @ 0x2A
   335  00002B                     	ds	1
   336  00002C                     ?_fdcRead:
   337                           	opt stack 0
   338  00002C                     fdcWrite@input:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0x2B
   342  00002C                     	ds	2
   343  00002E                     ??_fdcRead:
   344  00002E                     ?___ftmul:
   345                           	opt stack 0
   346  00002E                     ___ftmul@f1:
   347                           	opt stack 0
   348  00002E                     fdcInit@cap_w:
   349                           	opt stack 0
   350  00002E                     fdcSleep@cap_w:
   351                           	opt stack 0
   352  00002E                     fdcReset@cap_w:
   353                           	opt stack 0
   354                           
   355                           ; 4 bytes @ 0x2D
   356  00002E                     	ds	1
   357  00002F                     fdcRead@reg:
   358                           	opt stack 0
   359  00002F                     ___lldiv@counter:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x2E
   363  00002F                     	ds	1
   364  000030                     fdcRead@header:
   365                           	opt stack 0
   366  000030                     ultoa@buf:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0x2F
   370  000030                     	ds	1
   371  000031                     ___ftmul@f2:
   372                           	opt stack 0
   373                           
   374                           ; 3 bytes @ 0x30
   375  000031                     	ds	1
   376  000032                     fdcRead@ack:
   377                           	opt stack 0
   378  000032                     ultoa@val:
   379                           	opt stack 0
   380                           
   381                           ; 4 bytes @ 0x31
   382  000032                     	ds	2
   383  000034                     ??___ftmul:
   384  000034                     fdcRead@i:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x33
   388  000034                     	ds	2
   389  000036                     ultoa@base:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x35
   393  000036                     	ds	1
   394  000037                     ___ftmul@exp:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x36
   398  000037                     	ds	1
   399  000038                     ___ftmul@f3_as_product:
   400                           	opt stack 0
   401  000038                     ultoa@v:
   402                           	opt stack 0
   403                           
   404                           ; 4 bytes @ 0x37
   405  000038                     	ds	3
   406  00003B                     ___ftmul@cntr:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x3A
   410  00003B                     	ds	1
   411  00003C                     ___ftmul@sign:
   412                           	opt stack 0
   413  00003C                     ultoa@c:
   414                           	opt stack 0
   415                           
   416                           ; 1 bytes @ 0x3B
   417  00003C                     	ds	1
   418  00003D                     ___ftge@ff1:
   419                           	opt stack 0
   420  00003D                     writeVal@val:
   421                           	opt stack 0
   422                           
   423                           ; 4 bytes @ 0x3C
   424  00003D                     	ds	3
   425  000040                     ___ftge@ff2:
   426                           	opt stack 0
   427                           
   428                           ; 3 bytes @ 0x3F
   429  000040                     	ds	1
   430  000041                     fdcMeas@samples:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0x40
   434  000041                     	ds	2
   435  000043                     ??_fdcMeas:
   436  000043                     ??___ftge:
   437                           
   438                           ; 0 bytes @ 0x42
   439  000043                     	ds	3
   440  000046                     delay@sec:
   441                           	opt stack 0
   442                           
   443                           ; 3 bytes @ 0x45
   444  000046                     	ds	1
   445  000047                     fdcMeas@i:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x46
   449  000047                     	ds	2
   450  000049                     ??_delay:
   451  000049                     fdcMeas@rdy:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0x48
   455  000049                     	ds	1
   456  00004A                     fdcMeas@buf:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x49
   460  00004A                     	ds	1
   461  00004B                     delay@i:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x4A
   465  00004B                     	ds	1
   466  00004C                     delay@done:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0x4B
   470  00004C                     	ds	1
   471  00004D                     delay@t1:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x4C
   475  00004D                     	ds	2
   476  00004F                     delay@t2:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x4E
   480  00004F                     	ds	2
   481                           tblptru	equ	0xFF8
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           
   485 ;;
   486 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   487 ;;
   488 ;; *************** function _main *****************
   489 ;; Defined at:
   490 ;;		line 28 in file "main.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;  adcstat         3    0        PTR unsigned char 
   495 ;;  capstat         2   21[BANK0 ] PTR unsigned char 
   496 ;;		 -> fdcRead@val(2), adcRead@val(2), 
   497 ;;  cmd             1   23[BANK0 ] unsigned char 
   498 ;; Return value:  Size  Location     Type
   499 ;;		None               void
   500 ;; Registers used:
   501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   507 ;;      Params:         0       0       0       0       0       0       0
   508 ;;      Locals:         0       3       0       0       0       0       0
   509 ;;      Temps:          0       1       0       0       0       0       0
   510 ;;      Totals:         0       4       0       0       0       0       0
   511 ;;Total ram usage:        4 bytes
   512 ;; Hardware stack levels required when called:    8
   513 ;; This function calls:
   514 ;;		_adcRead
   515 ;;		_configureInterrupts
   516 ;;		_configureOscillator
   517 ;;		_delay
   518 ;;		_fdcMeas
   519 ;;		_fdcRead
   520 ;;		_fdcReset
   521 ;;		_i2cInit
   522 ;;		_readChar
   523 ;;		_uartInit
   524 ;;		_writeChar
   525 ;;		_writeStr
   526 ;;		_writeVal
   527 ;; This function is called by:
   528 ;;		Startup code after reset
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           	psect	text0
   533  0007D4                     __ptext0:
   534                           	opt stack 0
   535  0007D4                     _main:
   536                           	opt stack 23
   537                           
   538                           ;main.c: 29: configureOscillator();
   539                           
   540                           ;incstack = 0
   541  0007D4  EC8E  F008         	call	_configureOscillator	;wreg free
   542                           
   543                           ;main.c: 30: configureInterrupts();
   544  0007D8  EC9B  F008         	call	_configureInterrupts	;wreg free
   545                           
   546                           ;main.c: 31: uartInit();
   547  0007DC  EC47  F008         	call	_uartInit	;wreg free
   548                           
   549                           ;main.c: 32: i2cInit();
   550  0007E0  ECB4  F008         	call	_i2cInit	;wreg free
   551  0007E4                     l2503:
   552                           
   553                           ;main.c: 39: cmd = readChar();
   554  0007E4  ECBF  F008         	call	_readChar	;wreg free
   555  0007E8  0100               	movlb	0	; () banked
   556  0007EA  6F97               	movwf	main@cmd& (0+255),b
   557                           
   558                           ; BSR set to: 0
   559                           ;main.c: 40: if(cmd == 'm'){
   560  0007EC  0E6D               	movlw	109
   561  0007EE  0100               	movlb	0	; () banked
   562  0007F0  1997               	xorwf	main@cmd& (0+255),w,b
   563  0007F2  A4D8               	btfss	status,2,c
   564  0007F4  D007               	goto	l2509
   565                           
   566                           ; BSR set to: 0
   567                           ;main.c: 41: fdcMeas(250);
   568  0007F6  0E00               	movlw	0
   569  0007F8  6E42               	movwf	fdcMeas@samples+1,c
   570  0007FA  0EFA               	movlw	250
   571  0007FC  6E41               	movwf	fdcMeas@samples,c
   572  0007FE  EC1E  F003         	call	_fdcMeas	;wreg free
   573                           
   574                           ;main.c: 42: }
   575  000802  D7F0               	goto	l2503
   576  000804                     l2509:
   577                           
   578                           ;main.c: 43: else if(cmd == 'd'){
   579  000804  0E64               	movlw	100
   580  000806  0100               	movlb	0	; () banked
   581  000808  1997               	xorwf	main@cmd& (0+255),w,b
   582  00080A  A4D8               	btfss	status,2,c
   583  00080C  D00F               	goto	l2513
   584                           
   585                           ; BSR set to: 0
   586                           ;main.c: 44: delay(2);
   587  00080E  0E00               	movlw	0
   588  000810  6E46               	movwf	delay@sec,c
   589  000812  0E00               	movlw	0
   590  000814  6E47               	movwf	delay@sec+1,c
   591  000816  0E40               	movlw	64
   592  000818  6E48               	movwf	delay@sec+2,c
   593  00081A  EC0C  F006         	call	_delay	;wreg free
   594                           
   595                           ;main.c: 45: writeStr("delayed?\n");
   596  00081E  0E01               	movlw	low STR_7
   597  000820  6E24               	movwf	writeStr@str,c
   598  000822  0E06               	movlw	high STR_7
   599  000824  6E25               	movwf	writeStr@str+1,c
   600  000826  EC71  F007         	call	_writeStr	;wreg free
   601                           
   602                           ;main.c: 46: }
   603  00082A  D7DC               	goto	l2503
   604  00082C                     l2513:
   605                           
   606                           ;main.c: 47: else if(cmd == 'e'){
   607  00082C  0E65               	movlw	101
   608  00082E  0100               	movlb	0	; () banked
   609  000830  1997               	xorwf	main@cmd& (0+255),w,b
   610  000832  A4D8               	btfss	status,2,c
   611  000834  D03B               	goto	l2529
   612                           
   613                           ; BSR set to: 0
   614                           ;main.c: 48: capstat = fdcRead(0x1A);
   615  000836  0E1A               	movlw	26
   616  000838  EC5F  F006         	call	_fdcRead
   617  00083C  C02C  F095         	movff	?_fdcRead,main@capstat
   618  000840  C02D  F096         	movff	?_fdcRead+1,main@capstat+1
   619                           
   620                           ;main.c: 49: writeStr("MSB:");writeVal(capstat[0]);writeChar(' ');
   621  000844  0E35               	movlw	low STR_8
   622  000846  6E24               	movwf	writeStr@str,c
   623  000848  0E06               	movlw	high STR_8
   624  00084A  6E25               	movwf	writeStr@str+1,c
   625  00084C  EC71  F007         	call	_writeStr	;wreg free
   626  000850  C095  FFD9         	movff	main@capstat,fsr2l
   627  000854  C096  FFDA         	movff	main@capstat+1,fsr2h
   628  000858  50DF               	movf	indf2,w,c
   629  00085A  0100               	movlb	0	; () banked
   630  00085C  6F94               	movwf	??_main& (0+255),b
   631  00085E  0100               	movlb	0	; () banked
   632  000860  5194               	movf	??_main& (0+255),w,b
   633  000862  6E3D               	movwf	writeVal@val,c
   634  000864  6A3E               	clrf	writeVal@val+1,c
   635  000866  6A3F               	clrf	writeVal@val+2,c
   636  000868  6A40               	clrf	writeVal@val+3,c
   637  00086A  EC04  F008         	call	_writeVal	;wreg free
   638  00086E  0E20               	movlw	32
   639  000870  ECC6  F008         	call	_writeChar
   640                           
   641                           ;main.c: 50: writeStr("LSB:");writeVal(capstat[1]);writeChar('\n');
   642  000874  0E30               	movlw	low STR_9
   643  000876  6E24               	movwf	writeStr@str,c
   644  000878  0E06               	movlw	high STR_9
   645  00087A  6E25               	movwf	writeStr@str+1,c
   646  00087C  EC71  F007         	call	_writeStr	;wreg free
   647  000880  0100               	movlb	0	; () banked
   648  000882  EE20 F001          	lfsr	2,1
   649  000886  5195               	movf	main@capstat& (0+255),w,b
   650  000888  26D9               	addwf	fsr2l,f,c
   651  00088A  5196               	movf	(main@capstat+1)& (0+255),w,b
   652  00088C  22DA               	addwfc	fsr2h,f,c
   653  00088E  50DF               	movf	indf2,w,c
   654  000890  0100               	movlb	0	; () banked
   655  000892  6F94               	movwf	??_main& (0+255),b
   656  000894  0100               	movlb	0	; () banked
   657  000896  5194               	movf	??_main& (0+255),w,b
   658  000898  6E3D               	movwf	writeVal@val,c
   659  00089A  6A3E               	clrf	writeVal@val+1,c
   660  00089C  6A3F               	clrf	writeVal@val+2,c
   661  00089E  6A40               	clrf	writeVal@val+3,c
   662  0008A0  EC04  F008         	call	_writeVal	;wreg free
   663  0008A4  0E0A               	movlw	10
   664  0008A6  ECC6  F008         	call	_writeChar
   665                           
   666                           ;main.c: 51: }
   667  0008AA  D79C               	goto	l2503
   668  0008AC                     l2529:
   669                           
   670                           ;main.c: 52: else if(cmd == 'r'){
   671  0008AC  0E72               	movlw	114
   672  0008AE  0100               	movlb	0	; () banked
   673  0008B0  1997               	xorwf	main@cmd& (0+255),w,b
   674  0008B2  A4D8               	btfss	status,2,c
   675  0008B4  D003               	goto	l2533
   676                           
   677                           ; BSR set to: 0
   678                           ;main.c: 53: fdcReset();
   679  0008B6  EC56  F008         	call	_fdcReset	;wreg free
   680                           
   681                           ;main.c: 54: }
   682  0008BA  D794               	goto	l2503
   683  0008BC                     l2533:
   684                           
   685                           ;main.c: 55: else if(cmd == 'v'){
   686  0008BC  0E76               	movlw	118
   687  0008BE  0100               	movlb	0	; () banked
   688  0008C0  1997               	xorwf	main@cmd& (0+255),w,b
   689  0008C2  A4D8               	btfss	status,2,c
   690  0008C4  D78F               	goto	l2503
   691                           
   692                           ; BSR set to: 0
   693                           ;main.c: 56: capstat = adcRead(0);
   694  0008C6  0E00               	movlw	0
   695  0008C8  EC1D  F008         	call	_adcRead
   696  0008CC  C023  F095         	movff	?_adcRead,main@capstat
   697  0008D0  C024  F096         	movff	?_adcRead+1,main@capstat+1
   698  0008D4  D787               	goto	l2503
   699  0008D6                     __end_of_main:
   700                           	opt stack 0
   701                           tblptru	equ	0xFF8
   702                           postinc0	equ	0xFEE
   703                           wreg	equ	0xFE8
   704                           indf2	equ	0xFDF
   705                           fsr2h	equ	0xFDA
   706                           fsr2l	equ	0xFD9
   707                           status	equ	0xFD8
   708                           
   709 ;; *************** function _uartInit *****************
   710 ;; Defined at:
   711 ;;		line 21 in file "uart.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;		None               void
   718 ;; Registers used:
   719 ;;		wreg, status,2
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   725 ;;      Params:         0       0       0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0       0       0
   727 ;;      Temps:          0       0       0       0       0       0       0
   728 ;;      Totals:         0       0       0       0       0       0       0
   729 ;;Total ram usage:        0 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; Hardware stack levels required when called:    3
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text1
   740  00108E                     __ptext1:
   741                           	opt stack 0
   742  00108E                     _uartInit:
   743                           	opt stack 27
   744                           
   745                           ;uart.c: 23: TRISCbits.RC7 = 1;
   746                           
   747                           ;incstack = 0
   748  00108E  8E94               	bsf	3988,7,c	;volatile
   749                           
   750                           ;uart.c: 24: TRISCbits.RC6 = 1;
   751  001090  8C94               	bsf	3988,6,c	;volatile
   752                           
   753                           ;uart.c: 25: RCSTAbits.SPEN = 1;
   754  001092  8EAB               	bsf	4011,7,c	;volatile
   755                           
   756                           ;uart.c: 27: TXSTAbits.SYNC = 0;
   757  001094  98AC               	bcf	4012,4,c	;volatile
   758                           
   759                           ;uart.c: 28: TXSTAbits.BRGH = 1;
   760  001096  84AC               	bsf	4012,2,c	;volatile
   761                           
   762                           ;uart.c: 29: BRG16 = 0;
   763  001098  96B8               	bcf	4024,3,c	;volatile
   764                           
   765                           ;uart.c: 30: SPBRGH = 0;
   766  00109A  0E00               	movlw	0
   767  00109C  6EB0               	movwf	4016,c	;volatile
   768                           
   769                           ;uart.c: 31: SPBRG = 12;
   770  00109E  0E0C               	movlw	12
   771  0010A0  6EAF               	movwf	4015,c	;volatile
   772                           
   773                           ;uart.c: 33: PIE1bits.RCIE = 1;
   774  0010A2  8A9D               	bsf	3997,5,c	;volatile
   775                           
   776                           ;uart.c: 34: PIE1bits.TXIE = 0;
   777  0010A4  989D               	bcf	3997,4,c	;volatile
   778                           
   779                           ;uart.c: 35: TXSTAbits.TXEN = 1;
   780  0010A6  8AAC               	bsf	4012,5,c	;volatile
   781                           
   782                           ;uart.c: 36: RCSTAbits.CREN = 1;
   783  0010A8  88AB               	bsf	4011,4,c	;volatile
   784  0010AA  0012               	return		;funcret
   785  0010AC                     __end_of_uartInit:
   786                           	opt stack 0
   787                           tblptru	equ	0xFF8
   788                           postinc0	equ	0xFEE
   789                           wreg	equ	0xFE8
   790                           indf2	equ	0xFDF
   791                           fsr2h	equ	0xFDA
   792                           fsr2l	equ	0xFD9
   793                           status	equ	0xFD8
   794                           
   795 ;; *************** function _readChar *****************
   796 ;; Defined at:
   797 ;;		line 53 in file "uart.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      unsigned char 
   804 ;; Registers used:
   805 ;;		wreg, status,2
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   811 ;;      Params:         0       0       0       0       0       0       0
   812 ;;      Locals:         0       0       0       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0       0       0
   814 ;;      Totals:         0       0       0       0       0       0       0
   815 ;;Total ram usage:        0 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    3
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_main
   822 ;;		_readStr
   823 ;;		_readOpt
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text2
   828  00117E                     __ptext2:
   829                           	opt stack 0
   830  00117E                     _readChar:
   831                           	opt stack 27
   832  00117E                     l1937:
   833  00117E  5059               	movf	_en_read,w,c	;volatile
   834  001180  B4D8               	btfsc	status,2,c
   835  001182  D7FD               	goto	l1937
   836                           
   837                           ;uart.c: 55: en_read = 0;
   838  001184  0E00               	movlw	0
   839  001186  6E59               	movwf	_en_read,c	;volatile
   840                           
   841                           ;uart.c: 56: return data;
   842  001188  5057               	movf	_data,w,c	;volatile
   843  00118A  0012               	return	
   844  00118C                     __end_of_readChar:
   845                           	opt stack 0
   846                           tblptru	equ	0xFF8
   847                           postinc0	equ	0xFEE
   848                           wreg	equ	0xFE8
   849                           indf2	equ	0xFDF
   850                           fsr2h	equ	0xFDA
   851                           fsr2l	equ	0xFD9
   852                           status	equ	0xFD8
   853                           
   854 ;; *************** function _i2cInit *****************
   855 ;; Defined at:
   856 ;;		line 21 in file "i2clib.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;		None
   861 ;; Return value:  Size  Location     Type
   862 ;;		None               void
   863 ;; Registers used:
   864 ;;		wreg, status,2
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   870 ;;      Params:         0       0       0       0       0       0       0
   871 ;;      Locals:         0       0       0       0       0       0       0
   872 ;;      Temps:          0       0       0       0       0       0       0
   873 ;;      Totals:         0       0       0       0       0       0       0
   874 ;;Total ram usage:        0 bytes
   875 ;; Hardware stack levels used:    1
   876 ;; Hardware stack levels required when called:    3
   877 ;; This function calls:
   878 ;;		Nothing
   879 ;; This function is called by:
   880 ;;		_main
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text3
   885  001168                     __ptext3:
   886                           	opt stack 0
   887  001168                     _i2cInit:
   888                           	opt stack 27
   889                           
   890                           ;i2clib.c: 22: SSPCON1bits.SSPEN = 1;
   891                           
   892                           ;incstack = 0
   893  001168  8AC6               	bsf	4038,5,c	;volatile
   894                           
   895                           ;i2clib.c: 23: TRISCbits.RC3 = 1;
   896  00116A  8694               	bsf	3988,3,c	;volatile
   897                           
   898                           ;i2clib.c: 24: TRISCbits.RC4 = 1;
   899  00116C  8894               	bsf	3988,4,c	;volatile
   900                           
   901                           ;i2clib.c: 25: SSPCON1bits.SSPM = 0b1000;
   902  00116E  50C6               	movf	4038,w,c	;volatile
   903  001170  0BF0               	andlw	-16
   904  001172  0908               	iorlw	8
   905  001174  6EC6               	movwf	4038,c	;volatile
   906                           
   907                           ;i2clib.c: 26: SSPSTATbits.SMP = 1;
   908  001176  8EC7               	bsf	4039,7,c	;volatile
   909                           
   910                           ;i2clib.c: 27: SSPADD = 9;
   911  001178  0E09               	movlw	9
   912  00117A  6EC8               	movwf	4040,c	;volatile
   913  00117C  0012               	return		;funcret
   914  00117E                     __end_of_i2cInit:
   915                           	opt stack 0
   916                           tblptru	equ	0xFF8
   917                           postinc0	equ	0xFEE
   918                           wreg	equ	0xFE8
   919                           indf2	equ	0xFDF
   920                           fsr2h	equ	0xFDA
   921                           fsr2l	equ	0xFD9
   922                           status	equ	0xFD8
   923                           
   924 ;; *************** function _fdcReset *****************
   925 ;; Defined at:
   926 ;;		line 111 in file "fdc2214.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  cap_w           4   45[COMRAM] unsigned char [4]
   931 ;; Return value:  Size  Location     Type
   932 ;;		None               void
   933 ;; Registers used:
   934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   940 ;;      Params:         0       0       0       0       0       0       0
   941 ;;      Locals:         4       0       0       0       0       0       0
   942 ;;      Temps:          0       0       0       0       0       0       0
   943 ;;      Totals:         4       0       0       0       0       0       0
   944 ;;Total ram usage:        4 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    6
   947 ;; This function calls:
   948 ;;		_fdcWrite
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text4
   955  0010AC                     __ptext4:
   956                           	opt stack 0
   957  0010AC                     _fdcReset:
   958                           	opt stack 24
   959                           
   960                           ;fdc2214.c: 112: unsigned char cap_w[4];
   961                           ;fdc2214.c: 113: cap_w[0] = 0x54;
   962                           
   963                           ;incstack = 0
   964  0010AC  0E54               	movlw	84
   965  0010AE  6E2E               	movwf	fdcReset@cap_w,c
   966                           
   967                           ;fdc2214.c: 114: cap_w[1] = 0x1C;
   968  0010B0  0E1C               	movlw	28
   969  0010B2  6E2F               	movwf	fdcReset@cap_w+1,c
   970                           
   971                           ;fdc2214.c: 115: cap_w[2] = 0b10000000;
   972  0010B4  0E80               	movlw	128
   973  0010B6  6E30               	movwf	fdcReset@cap_w+2,c
   974                           
   975                           ;fdc2214.c: 116: cap_w[3] = 0b00000000;
   976  0010B8  0E00               	movlw	0
   977  0010BA  6E31               	movwf	fdcReset@cap_w+3,c
   978                           
   979                           ;fdc2214.c: 117: fdcWrite(cap_w);
   980  0010BC  0E2E               	movlw	low fdcReset@cap_w
   981  0010BE  6E2C               	movwf	fdcWrite@input,c
   982  0010C0  0E00               	movlw	high fdcReset@cap_w
   983  0010C2  6E2D               	movwf	fdcWrite@input+1,c
   984  0010C4  ECA8  F008         	call	_fdcWrite	;wreg free
   985  0010C8  0012               	return		;funcret
   986  0010CA                     __end_of_fdcReset:
   987                           	opt stack 0
   988                           tblptru	equ	0xFF8
   989                           postinc0	equ	0xFEE
   990                           wreg	equ	0xFE8
   991                           indf2	equ	0xFDF
   992                           fsr2h	equ	0xFDA
   993                           fsr2l	equ	0xFD9
   994                           status	equ	0xFD8
   995                           
   996 ;; *************** function _fdcMeas *****************
   997 ;; Defined at:
   998 ;;		line 120 in file "fdc2214.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;  samples         2   64[COMRAM] unsigned int 
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  i               2   70[COMRAM] int 
  1003 ;;  buf             2   73[COMRAM] PTR unsigned char 
  1004 ;;		 -> fdcRead@val(2), 
  1005 ;;  rdy             1   72[COMRAM] unsigned char 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;		None               void
  1008 ;; Registers used:
  1009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1015 ;;      Params:         2       0       0       0       0       0       0
  1016 ;;      Locals:         5       0       0       0       0       0       0
  1017 ;;      Temps:          4       0       0       0       0       0       0
  1018 ;;      Totals:        11       0       0       0       0       0       0
  1019 ;;Total ram usage:       11 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; Hardware stack levels required when called:    7
  1022 ;; This function calls:
  1023 ;;		_fdcInit
  1024 ;;		_fdcRead
  1025 ;;		_fdcSleep
  1026 ;;		_writeChar
  1027 ;;		_writeStr
  1028 ;;		_writeVal
  1029 ;; This function is called by:
  1030 ;;		_main
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text5
  1035  00063C                     __ptext5:
  1036                           	opt stack 0
  1037  00063C                     _fdcMeas:
  1038                           	opt stack 23
  1039                           
  1040                           ;fdc2214.c: 121: unsigned char *buf,rdy=0;
  1041                           
  1042                           ;incstack = 0
  1043  00063C  0E00               	movlw	0
  1044  00063E  6E49               	movwf	fdcMeas@rdy,c
  1045                           
  1046                           ;fdc2214.c: 122: fdcInit();
  1047  000640  ECB7  F005         	call	_fdcInit	;wreg free
  1048                           
  1049                           ;fdc2214.c: 123: count = 0;
  1050  000644  0E00               	movlw	0
  1051  000646  6E52               	movwf	_count+1,c	;volatile
  1052  000648  0E00               	movlw	0
  1053  00064A  6E51               	movwf	_count,c	;volatile
  1054                           
  1055                           ;fdc2214.c: 124: T3CONbits.TMR3ON = 1;
  1056  00064C  80B1               	bsf	4017,0,c	;volatile
  1057                           
  1058                           ;fdc2214.c: 125: TMR3 = 0x3CAF;
  1059  00064E  0E3C               	movlw	60
  1060  000650  6EB3               	movwf	4019,c	;volatile
  1061  000652  0EAF               	movlw	175
  1062  000654  6EB2               	movwf	4018,c	;volatile
  1063                           
  1064                           ;fdc2214.c: 126: for(int i=0;i<samples;i++){
  1065  000656  0E00               	movlw	0
  1066  000658  6E48               	movwf	fdcMeas@i+1,c
  1067  00065A  0E00               	movlw	0
  1068  00065C  6E47               	movwf	fdcMeas@i,c
  1069  00065E  D0B0               	goto	l2447
  1070  000660                     l2397:
  1071                           
  1072                           ;fdc2214.c: 128: buf = fdcRead(0x18);
  1073  000660  0E18               	movlw	24
  1074  000662  EC5F  F006         	call	_fdcRead
  1075  000666  C02C  F04A         	movff	?_fdcRead,fdcMeas@buf
  1076  00066A  C02D  F04B         	movff	?_fdcRead+1,fdcMeas@buf+1
  1077                           
  1078                           ;fdc2214.c: 129: if(buf[1]&0x08){
  1079  00066E  EE20 F001          	lfsr	2,1
  1080  000672  504A               	movf	fdcMeas@buf,w,c
  1081  000674  26D9               	addwf	fsr2l,f,c
  1082  000676  504B               	movf	fdcMeas@buf+1,w,c
  1083  000678  22DA               	addwfc	fsr2h,f,c
  1084  00067A  A6DF               	btfss	indf2,3,c
  1085  00067C  D002               	goto	l83
  1086                           
  1087                           ;fdc2214.c: 130: rdy = 1;
  1088  00067E  0E01               	movlw	1
  1089  000680  6E49               	movwf	fdcMeas@rdy,c
  1090  000682                     l83:
  1091  000682  5049               	movf	fdcMeas@rdy,w,c
  1092  000684  B4D8               	btfsc	status,2,c
  1093  000686  D7EC               	goto	l2397
  1094                           
  1095                           ;fdc2214.c: 131: }
  1096                           ;fdc2214.c: 132: }
  1097                           ;fdc2214.c: 133: rdy = 0;
  1098  000688  0E00               	movlw	0
  1099  00068A  6E49               	movwf	fdcMeas@rdy,c
  1100                           
  1101                           ;fdc2214.c: 134: buf = fdcRead(0x00);
  1102  00068C  0E00               	movlw	0
  1103  00068E  EC5F  F006         	call	_fdcRead
  1104  000692  C02C  F04A         	movff	?_fdcRead,fdcMeas@buf
  1105  000696  C02D  F04B         	movff	?_fdcRead+1,fdcMeas@buf+1
  1106                           
  1107                           ;fdc2214.c: 135: writeStr("MSB1:");writeVal(buf[0]);writeChar(' ');
  1108  00069A  0E18               	movlw	low STR_1
  1109  00069C  6E24               	movwf	writeStr@str,c
  1110  00069E  0E06               	movlw	high STR_1
  1111  0006A0  6E25               	movwf	writeStr@str+1,c
  1112  0006A2  EC71  F007         	call	_writeStr	;wreg free
  1113  0006A6  C04A  FFD9         	movff	fdcMeas@buf,fsr2l
  1114  0006AA  C04B  FFDA         	movff	fdcMeas@buf+1,fsr2h
  1115  0006AE  50DF               	movf	indf2,w,c
  1116  0006B0  6E43               	movwf	??_fdcMeas& (0+255),c
  1117  0006B2  5043               	movf	??_fdcMeas,w,c
  1118  0006B4  6E3D               	movwf	writeVal@val,c
  1119  0006B6  6A3E               	clrf	writeVal@val+1,c
  1120  0006B8  6A3F               	clrf	writeVal@val+2,c
  1121  0006BA  6A40               	clrf	writeVal@val+3,c
  1122  0006BC  EC04  F008         	call	_writeVal	;wreg free
  1123  0006C0  0E20               	movlw	32
  1124  0006C2  ECC6  F008         	call	_writeChar
  1125                           
  1126                           ;fdc2214.c: 136: writeStr("MSB2:");writeVal(buf[1]);writeChar('\n');
  1127  0006C6  0E24               	movlw	low STR_2
  1128  0006C8  6E24               	movwf	writeStr@str,c
  1129  0006CA  0E06               	movlw	high STR_2
  1130  0006CC  6E25               	movwf	writeStr@str+1,c
  1131  0006CE  EC71  F007         	call	_writeStr	;wreg free
  1132  0006D2  EE20 F001          	lfsr	2,1
  1133  0006D6  504A               	movf	fdcMeas@buf,w,c
  1134  0006D8  26D9               	addwf	fsr2l,f,c
  1135  0006DA  504B               	movf	fdcMeas@buf+1,w,c
  1136  0006DC  22DA               	addwfc	fsr2h,f,c
  1137  0006DE  50DF               	movf	indf2,w,c
  1138  0006E0  6E43               	movwf	??_fdcMeas& (0+255),c
  1139  0006E2  5043               	movf	??_fdcMeas,w,c
  1140  0006E4  6E3D               	movwf	writeVal@val,c
  1141  0006E6  6A3E               	clrf	writeVal@val+1,c
  1142  0006E8  6A3F               	clrf	writeVal@val+2,c
  1143  0006EA  6A40               	clrf	writeVal@val+3,c
  1144  0006EC  EC04  F008         	call	_writeVal	;wreg free
  1145  0006F0  0E0A               	movlw	10
  1146  0006F2  ECC6  F008         	call	_writeChar
  1147                           
  1148                           ;fdc2214.c: 137: buf = fdcRead(0x01);
  1149  0006F6  0E01               	movlw	1
  1150  0006F8  EC5F  F006         	call	_fdcRead
  1151  0006FC  C02C  F04A         	movff	?_fdcRead,fdcMeas@buf
  1152  000700  C02D  F04B         	movff	?_fdcRead+1,fdcMeas@buf+1
  1153                           
  1154                           ;fdc2214.c: 138: writeStr("LSB1:");writeVal(buf[0]);writeChar(' ');
  1155  000704  0E12               	movlw	low STR_3
  1156  000706  6E24               	movwf	writeStr@str,c
  1157  000708  0E06               	movlw	high STR_3
  1158  00070A  6E25               	movwf	writeStr@str+1,c
  1159  00070C  EC71  F007         	call	_writeStr	;wreg free
  1160  000710  C04A  FFD9         	movff	fdcMeas@buf,fsr2l
  1161  000714  C04B  FFDA         	movff	fdcMeas@buf+1,fsr2h
  1162  000718  50DF               	movf	indf2,w,c
  1163  00071A  6E43               	movwf	??_fdcMeas& (0+255),c
  1164  00071C  5043               	movf	??_fdcMeas,w,c
  1165  00071E  6E3D               	movwf	writeVal@val,c
  1166  000720  6A3E               	clrf	writeVal@val+1,c
  1167  000722  6A3F               	clrf	writeVal@val+2,c
  1168  000724  6A40               	clrf	writeVal@val+3,c
  1169  000726  EC04  F008         	call	_writeVal	;wreg free
  1170  00072A  0E20               	movlw	32
  1171  00072C  ECC6  F008         	call	_writeChar
  1172                           
  1173                           ;fdc2214.c: 139: writeStr("LSB2:");writeVal(buf[1]);writeChar('\n');
  1174  000730  0E1E               	movlw	low STR_4
  1175  000732  6E24               	movwf	writeStr@str,c
  1176  000734  0E06               	movlw	high STR_4
  1177  000736  6E25               	movwf	writeStr@str+1,c
  1178  000738  EC71  F007         	call	_writeStr	;wreg free
  1179  00073C  EE20 F001          	lfsr	2,1
  1180  000740  504A               	movf	fdcMeas@buf,w,c
  1181  000742  26D9               	addwf	fsr2l,f,c
  1182  000744  504B               	movf	fdcMeas@buf+1,w,c
  1183  000746  22DA               	addwfc	fsr2h,f,c
  1184  000748  50DF               	movf	indf2,w,c
  1185  00074A  6E43               	movwf	??_fdcMeas& (0+255),c
  1186  00074C  5043               	movf	??_fdcMeas,w,c
  1187  00074E  6E3D               	movwf	writeVal@val,c
  1188  000750  6A3E               	clrf	writeVal@val+1,c
  1189  000752  6A3F               	clrf	writeVal@val+2,c
  1190  000754  6A40               	clrf	writeVal@val+3,c
  1191  000756  EC04  F008         	call	_writeVal	;wreg free
  1192  00075A  0E0A               	movlw	10
  1193  00075C  ECC6  F008         	call	_writeChar
  1194                           
  1195                           ;fdc2214.c: 140: writeStr("Count:");writeVal(count);writeChar(' ');
  1196  000760  0E0B               	movlw	low STR_5
  1197  000762  6E24               	movwf	writeStr@str,c
  1198  000764  0E06               	movlw	high STR_5
  1199  000766  6E25               	movwf	writeStr@str+1,c
  1200  000768  EC71  F007         	call	_writeStr	;wreg free
  1201  00076C  C051  F03D         	movff	_count,writeVal@val	;volatile
  1202  000770  C052  F03E         	movff	_count+1,writeVal@val+1	;volatile
  1203  000774  6A3F               	clrf	writeVal@val+2,c
  1204  000776  6A40               	clrf	writeVal@val+3,c
  1205  000778  EC04  F008         	call	_writeVal	;wreg free
  1206  00077C  0E20               	movlw	32
  1207  00077E  ECC6  F008         	call	_writeChar
  1208                           
  1209                           ;fdc2214.c: 141: writeStr("TMR3:");writeVal(TMR3-15655);writeChar('\n');
  1210  000782  0E2A               	movlw	low STR_6
  1211  000784  6E24               	movwf	writeStr@str,c
  1212  000786  0E06               	movlw	high STR_6
  1213  000788  6E25               	movwf	writeStr@str+1,c
  1214  00078A  EC71  F007         	call	_writeStr	;wreg free
  1215  00078E  0ED9               	movlw	217
  1216  000790  6E43               	movwf	??_fdcMeas& (0+255),c
  1217  000792  0EC2               	movlw	194
  1218  000794  6E44               	movwf	(??_fdcMeas+1)& (0+255),c
  1219  000796  CFB2 F045          	movff	4018,??_fdcMeas+2	;volatile
  1220  00079A  CFB3 F046          	movff	4019,??_fdcMeas+3	;volatile
  1221  00079E  5043               	movf	??_fdcMeas,w,c
  1222  0007A0  2645               	addwf	??_fdcMeas+2,f,c
  1223  0007A2  5044               	movf	??_fdcMeas+1,w,c
  1224  0007A4  2246               	addwfc	??_fdcMeas+3,f,c
  1225  0007A6  C045  F03D         	movff	??_fdcMeas+2,writeVal@val
  1226  0007AA  C046  F03E         	movff	??_fdcMeas+3,writeVal@val+1
  1227  0007AE  6A3F               	clrf	writeVal@val+2,c
  1228  0007B0  6A40               	clrf	writeVal@val+3,c
  1229  0007B2  EC04  F008         	call	_writeVal	;wreg free
  1230  0007B6  0E0A               	movlw	10
  1231  0007B8  ECC6  F008         	call	_writeChar
  1232  0007BC  4A47               	infsnz	fdcMeas@i,f,c
  1233  0007BE  2A48               	incf	fdcMeas@i+1,f,c
  1234  0007C0                     l2447:
  1235  0007C0  5041               	movf	fdcMeas@samples,w,c
  1236  0007C2  5C47               	subwf	fdcMeas@i,w,c
  1237  0007C4  5042               	movf	fdcMeas@samples+1,w,c
  1238  0007C6  5848               	subwfb	fdcMeas@i+1,w,c
  1239  0007C8  A0D8               	btfss	status,0,c
  1240  0007CA  D75B               	goto	l83
  1241                           
  1242                           ;fdc2214.c: 143: }
  1243                           ;fdc2214.c: 144: T3CONbits.TMR3ON = 0;
  1244  0007CC  90B1               	bcf	4017,0,c	;volatile
  1245                           
  1246                           ;fdc2214.c: 145: fdcSleep();
  1247  0007CE  EC65  F008         	call	_fdcSleep	;wreg free
  1248  0007D2  0012               	return		;funcret
  1249  0007D4                     __end_of_fdcMeas:
  1250                           	opt stack 0
  1251                           tblptru	equ	0xFF8
  1252                           postinc0	equ	0xFEE
  1253                           wreg	equ	0xFE8
  1254                           indf2	equ	0xFDF
  1255                           fsr2h	equ	0xFDA
  1256                           fsr2l	equ	0xFD9
  1257                           status	equ	0xFD8
  1258                           
  1259 ;; *************** function _fdcSleep *****************
  1260 ;; Defined at:
  1261 ;;		line 103 in file "fdc2214.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  cap_w           4   45[COMRAM] unsigned char [4]
  1266 ;; Return value:  Size  Location     Type
  1267 ;;		None               void
  1268 ;; Registers used:
  1269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1275 ;;      Params:         0       0       0       0       0       0       0
  1276 ;;      Locals:         4       0       0       0       0       0       0
  1277 ;;      Temps:          0       0       0       0       0       0       0
  1278 ;;      Totals:         4       0       0       0       0       0       0
  1279 ;;Total ram usage:        4 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; Hardware stack levels required when called:    6
  1282 ;; This function calls:
  1283 ;;		_fdcWrite
  1284 ;; This function is called by:
  1285 ;;		_fdcMeas
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text6
  1290  0010CA                     __ptext6:
  1291                           	opt stack 0
  1292  0010CA                     _fdcSleep:
  1293                           	opt stack 23
  1294                           
  1295                           ;fdc2214.c: 104: unsigned char cap_w[4];
  1296                           ;fdc2214.c: 105: cap_w[0] = 0x54;
  1297                           
  1298                           ;incstack = 0
  1299  0010CA  0E54               	movlw	84
  1300  0010CC  6E2E               	movwf	fdcSleep@cap_w,c
  1301                           
  1302                           ;fdc2214.c: 106: cap_w[1] = 0x1A;
  1303  0010CE  0E1A               	movlw	26
  1304  0010D0  6E2F               	movwf	fdcSleep@cap_w+1,c
  1305                           
  1306                           ;fdc2214.c: 107: cap_w[2] = 0b00011110;
  1307  0010D2  0E1E               	movlw	30
  1308  0010D4  6E30               	movwf	fdcSleep@cap_w+2,c
  1309                           
  1310                           ;fdc2214.c: 108: cap_w[3] = 0b10100001;
  1311  0010D6  0EA1               	movlw	161
  1312  0010D8  6E31               	movwf	fdcSleep@cap_w+3,c
  1313                           
  1314                           ;fdc2214.c: 109: fdcWrite(cap_w);
  1315  0010DA  0E2E               	movlw	low fdcSleep@cap_w
  1316  0010DC  6E2C               	movwf	fdcWrite@input,c
  1317  0010DE  0E00               	movlw	high fdcSleep@cap_w
  1318  0010E0  6E2D               	movwf	fdcWrite@input+1,c
  1319  0010E2  ECA8  F008         	call	_fdcWrite	;wreg free
  1320  0010E6  0012               	return		;funcret
  1321  0010E8                     __end_of_fdcSleep:
  1322                           	opt stack 0
  1323                           tblptru	equ	0xFF8
  1324                           postinc0	equ	0xFEE
  1325                           wreg	equ	0xFE8
  1326                           indf2	equ	0xFDF
  1327                           fsr2h	equ	0xFDA
  1328                           fsr2l	equ	0xFD9
  1329                           status	equ	0xFD8
  1330                           
  1331 ;; *************** function _fdcRead *****************
  1332 ;; Defined at:
  1333 ;;		line 36 in file "fdc2214.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  reg             1    wreg     unsigned char 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  reg             1   46[COMRAM] unsigned char 
  1338 ;;  i               1   51[COMRAM] unsigned char 
  1339 ;;  ack             2   49[COMRAM] unsigned char [2]
  1340 ;;  header          2   47[COMRAM] unsigned char [2]
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  2   43[COMRAM] PTR unsigned char 
  1343 ;; Registers used:
  1344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1350 ;;      Params:         2       0       0       0       0       0       0
  1351 ;;      Locals:         6       0       0       0       0       0       0
  1352 ;;      Temps:          1       0       0       0       0       0       0
  1353 ;;      Totals:         9       0       0       0       0       0       0
  1354 ;;Total ram usage:        9 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    5
  1357 ;; This function calls:
  1358 ;;		_i2cIdle
  1359 ;;		_i2cStart
  1360 ;; This function is called by:
  1361 ;;		_fdcMeas
  1362 ;;		_main
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text7
  1367  000CBE                     __ptext7:
  1368                           	opt stack 0
  1369  000CBE                     _fdcRead:
  1370                           	opt stack 25
  1371                           
  1372                           ;incstack = 0
  1373                           ;fdcRead@reg stored from wreg
  1374  000CBE  6E2F               	movwf	fdcRead@reg,c
  1375                           
  1376                           ;fdc2214.c: 37: static unsigned char val[2];
  1377                           ;fdc2214.c: 38: unsigned char header[2],ack[2];
  1378                           ;fdc2214.c: 39: header[0] = 0x54;
  1379  000CC0  0E54               	movlw	84
  1380  000CC2  6E30               	movwf	fdcRead@header,c
  1381                           
  1382                           ;fdc2214.c: 40: header[1] = reg;
  1383  000CC4  C02F  F031         	movff	fdcRead@reg,fdcRead@header+1
  1384                           
  1385                           ;fdc2214.c: 41: ack[0] = 0;
  1386  000CC8  0E00               	movlw	0
  1387  000CCA  6E32               	movwf	fdcRead@ack,c
  1388                           
  1389                           ;fdc2214.c: 42: ack[1] = 1;
  1390  000CCC  0E01               	movlw	1
  1391  000CCE  6E33               	movwf	fdcRead@ack+1,c
  1392                           
  1393                           ;fdc2214.c: 43: i2cStart(header,2);
  1394  000CD0  0E30               	movlw	low fdcRead@header
  1395  000CD2  6E24               	movwf	i2cStart@input,c
  1396  000CD4  0E00               	movlw	high fdcRead@header
  1397  000CD6  6E25               	movwf	i2cStart@input+1,c
  1398  000CD8  0E02               	movlw	2
  1399  000CDA  6E26               	movwf	i2cStart@len,c
  1400  000CDC  ECE2  F007         	call	_i2cStart	;wreg free
  1401                           
  1402                           ;fdc2214.c: 44: SSPCON2bits.RSEN = 1;
  1403  000CE0  82C5               	bsf	4037,1,c	;volatile
  1404                           
  1405                           ;fdc2214.c: 45: i2cIdle();
  1406  000CE2  EC81  F008         	call	_i2cIdle	;wreg free
  1407                           
  1408                           ;fdc2214.c: 46: SSPBUF = 0x55;
  1409  000CE6  0E55               	movlw	85
  1410  000CE8  6EC9               	movwf	4041,c	;volatile
  1411                           
  1412                           ;fdc2214.c: 47: i2cIdle();
  1413  000CEA  EC81  F008         	call	_i2cIdle	;wreg free
  1414                           
  1415                           ;fdc2214.c: 48: for(char i=0;i<2;i++){
  1416  000CEE  0E00               	movlw	0
  1417  000CF0  6E34               	movwf	fdcRead@i,c
  1418  000CF2                     l2243:
  1419  000CF2  0E01               	movlw	1
  1420  000CF4  6434               	cpfsgt	fdcRead@i,c
  1421  000CF6  D001               	goto	l64
  1422  000CF8  D023               	goto	l65
  1423  000CFA                     l64:
  1424                           
  1425                           ;fdc2214.c: 49: SSPCON2bits.RCEN = 1;
  1426  000CFA  86C5               	bsf	4037,3,c	;volatile
  1427                           
  1428                           ;fdc2214.c: 50: i2cIdle();
  1429  000CFC  EC81  F008         	call	_i2cIdle	;wreg free
  1430                           
  1431                           ;fdc2214.c: 51: val[i] = SSPBUF;
  1432  000D00  5034               	movf	fdcRead@i,w,c
  1433  000D02  0D01               	mullw	1
  1434  000D04  0E5B               	movlw	low fdcRead@val
  1435  000D06  24F3               	addwf	prodl,w,c
  1436  000D08  6ED9               	movwf	fsr2l,c
  1437  000D0A  0E00               	movlw	high fdcRead@val
  1438  000D0C  20F4               	addwfc	prodh,w,c
  1439  000D0E  6EDA               	movwf	fsr2h,c
  1440  000D10  CFC9 FFDF          	movff	4041,indf2	;volatile
  1441                           
  1442                           ;fdc2214.c: 52: SSPCON2bits.ACKDT = ack[i];
  1443  000D14  5034               	movf	fdcRead@i,w,c
  1444  000D16  0D01               	mullw	1
  1445  000D18  0E32               	movlw	low fdcRead@ack
  1446  000D1A  24F3               	addwf	prodl,w,c
  1447  000D1C  6ED9               	movwf	fsr2l,c
  1448  000D1E  0E00               	movlw	high fdcRead@ack
  1449  000D20  20F4               	addwfc	prodh,w,c
  1450  000D22  6EDA               	movwf	fsr2h,c
  1451  000D24  50DF               	movf	indf2,w,c
  1452  000D26  6E2E               	movwf	??_fdcRead& (0+255),c
  1453  000D28  3A2E               	swapf	??_fdcRead,f,c
  1454  000D2A  462E               	rlncf	??_fdcRead,f,c
  1455  000D2C  50C5               	movf	4037,w,c	;volatile
  1456  000D2E  182E               	xorwf	??_fdcRead,w,c
  1457  000D30  0BDF               	andlw	-33
  1458  000D32  182E               	xorwf	??_fdcRead,w,c
  1459  000D34  6EC5               	movwf	4037,c	;volatile
  1460                           
  1461                           ;fdc2214.c: 53: SSPCON2bits.ACKEN = 1;
  1462  000D36  88C5               	bsf	4037,4,c	;volatile
  1463                           
  1464                           ;fdc2214.c: 54: i2cIdle();
  1465  000D38  EC81  F008         	call	_i2cIdle	;wreg free
  1466  000D3C  2A34               	incf	fdcRead@i,f,c
  1467  000D3E  D7D9               	goto	l2243
  1468  000D40                     l65:
  1469                           
  1470                           ;fdc2214.c: 55: }
  1471                           ;fdc2214.c: 56: SSPCON2bits.PEN = 1;
  1472  000D40  84C5               	bsf	4037,2,c	;volatile
  1473                           
  1474                           ;fdc2214.c: 57: i2cIdle();
  1475  000D42  EC81  F008         	call	_i2cIdle	;wreg free
  1476                           
  1477                           ;fdc2214.c: 58: return val;
  1478  000D46  0E5B               	movlw	low fdcRead@val
  1479  000D48  6E2C               	movwf	?_fdcRead,c
  1480  000D4A  0E00               	movlw	high fdcRead@val
  1481  000D4C  6E2D               	movwf	?_fdcRead+1,c
  1482  000D4E  0012               	return	
  1483  000D50                     __end_of_fdcRead:
  1484                           	opt stack 0
  1485                           tblptru	equ	0xFF8
  1486                           prodh	equ	0xFF4
  1487                           prodl	equ	0xFF3
  1488                           postinc0	equ	0xFEE
  1489                           wreg	equ	0xFE8
  1490                           indf2	equ	0xFDF
  1491                           fsr2h	equ	0xFDA
  1492                           fsr2l	equ	0xFD9
  1493                           status	equ	0xFD8
  1494                           
  1495 ;; *************** function _fdcInit *****************
  1496 ;; Defined at:
  1497 ;;		line 65 in file "fdc2214.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  cap_w           4   45[COMRAM] unsigned char [4]
  1502 ;; Return value:  Size  Location     Type
  1503 ;;		None               void
  1504 ;; Registers used:
  1505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1511 ;;      Params:         0       0       0       0       0       0       0
  1512 ;;      Locals:         4       0       0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0
  1514 ;;      Totals:         4       0       0       0       0       0       0
  1515 ;;Total ram usage:        4 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    6
  1518 ;; This function calls:
  1519 ;;		_fdcWrite
  1520 ;; This function is called by:
  1521 ;;		_fdcMeas
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text8
  1526  000B6E                     __ptext8:
  1527                           	opt stack 0
  1528  000B6E                     _fdcInit:
  1529                           	opt stack 23
  1530                           
  1531                           ;fdc2214.c: 66: unsigned char cap_w[4];
  1532                           ;fdc2214.c: 67: cap_w[0] = 0x54;
  1533                           
  1534                           ;incstack = 0
  1535  000B6E  0E54               	movlw	84
  1536  000B70  6E2E               	movwf	fdcInit@cap_w,c
  1537                           
  1538                           ;fdc2214.c: 68: cap_w[1] = 0x1E;
  1539  000B72  0E1E               	movlw	30
  1540  000B74  6E2F               	movwf	fdcInit@cap_w+1,c
  1541                           
  1542                           ;fdc2214.c: 69: cap_w[2] = 0b11111000;
  1543  000B76  0EF8               	movlw	248
  1544  000B78  6E30               	movwf	fdcInit@cap_w+2,c
  1545                           
  1546                           ;fdc2214.c: 70: cap_w[3] = 0b00000000;
  1547  000B7A  0E00               	movlw	0
  1548  000B7C  6E31               	movwf	fdcInit@cap_w+3,c
  1549                           
  1550                           ;fdc2214.c: 71: fdcWrite(cap_w);
  1551  000B7E  0E2E               	movlw	low fdcInit@cap_w
  1552  000B80  6E2C               	movwf	fdcWrite@input,c
  1553  000B82  0E00               	movlw	high fdcInit@cap_w
  1554  000B84  6E2D               	movwf	fdcWrite@input+1,c
  1555  000B86  ECA8  F008         	call	_fdcWrite	;wreg free
  1556                           
  1557                           ;fdc2214.c: 73: cap_w[0] = 0x54;
  1558  000B8A  0E54               	movlw	84
  1559  000B8C  6E2E               	movwf	fdcInit@cap_w,c
  1560                           
  1561                           ;fdc2214.c: 74: cap_w[1] = 0x10;
  1562  000B8E  0E10               	movlw	16
  1563  000B90  6E2F               	movwf	fdcInit@cap_w+1,c
  1564                           
  1565                           ;fdc2214.c: 75: cap_w[2] = 0;
  1566  000B92  0E00               	movlw	0
  1567  000B94  6E30               	movwf	fdcInit@cap_w+2,c
  1568                           
  1569                           ;fdc2214.c: 76: cap_w[3] = 20;
  1570  000B96  0E14               	movlw	20
  1571  000B98  6E31               	movwf	fdcInit@cap_w+3,c
  1572                           
  1573                           ;fdc2214.c: 77: fdcWrite(cap_w);
  1574  000B9A  0E2E               	movlw	low fdcInit@cap_w
  1575  000B9C  6E2C               	movwf	fdcWrite@input,c
  1576  000B9E  0E00               	movlw	high fdcInit@cap_w
  1577  000BA0  6E2D               	movwf	fdcWrite@input+1,c
  1578  000BA2  ECA8  F008         	call	_fdcWrite	;wreg free
  1579                           
  1580                           ;fdc2214.c: 79: cap_w[0] = 0x54;
  1581  000BA6  0E54               	movlw	84
  1582  000BA8  6E2E               	movwf	fdcInit@cap_w,c
  1583                           
  1584                           ;fdc2214.c: 80: cap_w[1] = 0x08;
  1585  000BAA  0E08               	movlw	8
  1586  000BAC  6E2F               	movwf	fdcInit@cap_w+1,c
  1587                           
  1588                           ;fdc2214.c: 81: cap_w[2] = 0x20;
  1589  000BAE  0E20               	movlw	32
  1590  000BB0  6E30               	movwf	fdcInit@cap_w+2,c
  1591                           
  1592                           ;fdc2214.c: 82: cap_w[3] = 0x00;
  1593  000BB2  0E00               	movlw	0
  1594  000BB4  6E31               	movwf	fdcInit@cap_w+3,c
  1595                           
  1596                           ;fdc2214.c: 83: fdcWrite(cap_w);
  1597  000BB6  0E2E               	movlw	low fdcInit@cap_w
  1598  000BB8  6E2C               	movwf	fdcWrite@input,c
  1599  000BBA  0E00               	movlw	high fdcInit@cap_w
  1600  000BBC  6E2D               	movwf	fdcWrite@input+1,c
  1601  000BBE  ECA8  F008         	call	_fdcWrite	;wreg free
  1602                           
  1603                           ;fdc2214.c: 85: cap_w[0] = 0x54;
  1604  000BC2  0E54               	movlw	84
  1605  000BC4  6E2E               	movwf	fdcInit@cap_w,c
  1606                           
  1607                           ;fdc2214.c: 86: cap_w[1] = 0x14;
  1608  000BC6  0E14               	movlw	20
  1609  000BC8  6E2F               	movwf	fdcInit@cap_w+1,c
  1610                           
  1611                           ;fdc2214.c: 87: cap_w[2] = 0b00000000;
  1612  000BCA  0E00               	movlw	0
  1613  000BCC  6E30               	movwf	fdcInit@cap_w+2,c
  1614                           
  1615                           ;fdc2214.c: 88: cap_w[3] = 2;
  1616  000BCE  0E02               	movlw	2
  1617  000BD0  6E31               	movwf	fdcInit@cap_w+3,c
  1618                           
  1619                           ;fdc2214.c: 89: fdcWrite(cap_w);
  1620  000BD2  0E2E               	movlw	low fdcInit@cap_w
  1621  000BD4  6E2C               	movwf	fdcWrite@input,c
  1622  000BD6  0E00               	movlw	high fdcInit@cap_w
  1623  000BD8  6E2D               	movwf	fdcWrite@input+1,c
  1624  000BDA  ECA8  F008         	call	_fdcWrite	;wreg free
  1625                           
  1626                           ;fdc2214.c: 91: cap_w[0] = 0x54;
  1627  000BDE  0E54               	movlw	84
  1628  000BE0  6E2E               	movwf	fdcInit@cap_w,c
  1629                           
  1630                           ;fdc2214.c: 92: cap_w[1] = 0x1B;
  1631  000BE2  0E1B               	movlw	27
  1632  000BE4  6E2F               	movwf	fdcInit@cap_w+1,c
  1633                           
  1634                           ;fdc2214.c: 93: cap_w[2] = 0b00000010;
  1635  000BE6  0E02               	movlw	2
  1636  000BE8  6E30               	movwf	fdcInit@cap_w+2,c
  1637                           
  1638                           ;fdc2214.c: 94: cap_w[3] = 0b00001101;
  1639  000BEA  0E0D               	movlw	13
  1640  000BEC  6E31               	movwf	fdcInit@cap_w+3,c
  1641                           
  1642                           ;fdc2214.c: 95: fdcWrite(cap_w);
  1643  000BEE  0E2E               	movlw	low fdcInit@cap_w
  1644  000BF0  6E2C               	movwf	fdcWrite@input,c
  1645  000BF2  0E00               	movlw	high fdcInit@cap_w
  1646  000BF4  6E2D               	movwf	fdcWrite@input+1,c
  1647  000BF6  ECA8  F008         	call	_fdcWrite	;wreg free
  1648                           
  1649                           ;fdc2214.c: 97: cap_w[0] = 0x54;
  1650  000BFA  0E54               	movlw	84
  1651  000BFC  6E2E               	movwf	fdcInit@cap_w,c
  1652                           
  1653                           ;fdc2214.c: 98: cap_w[1] = 0x1A;
  1654  000BFE  0E1A               	movlw	26
  1655  000C00  6E2F               	movwf	fdcInit@cap_w+1,c
  1656                           
  1657                           ;fdc2214.c: 99: cap_w[2] = 0b00010110;
  1658  000C02  0E16               	movlw	22
  1659  000C04  6E30               	movwf	fdcInit@cap_w+2,c
  1660                           
  1661                           ;fdc2214.c: 100: cap_w[3] = 0b10000101;
  1662  000C06  0E85               	movlw	133
  1663  000C08  6E31               	movwf	fdcInit@cap_w+3,c
  1664                           
  1665                           ;fdc2214.c: 101: fdcWrite(cap_w);
  1666  000C0A  0E2E               	movlw	low fdcInit@cap_w
  1667  000C0C  6E2C               	movwf	fdcWrite@input,c
  1668  000C0E  0E00               	movlw	high fdcInit@cap_w
  1669  000C10  6E2D               	movwf	fdcWrite@input+1,c
  1670  000C12  ECA8  F008         	call	_fdcWrite	;wreg free
  1671  000C16  0012               	return		;funcret
  1672  000C18                     __end_of_fdcInit:
  1673                           	opt stack 0
  1674                           tblptru	equ	0xFF8
  1675                           prodh	equ	0xFF4
  1676                           prodl	equ	0xFF3
  1677                           postinc0	equ	0xFEE
  1678                           wreg	equ	0xFE8
  1679                           indf2	equ	0xFDF
  1680                           fsr2h	equ	0xFDA
  1681                           fsr2l	equ	0xFD9
  1682                           status	equ	0xFD8
  1683                           
  1684 ;; *************** function _fdcWrite *****************
  1685 ;; Defined at:
  1686 ;;		line 60 in file "fdc2214.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  input           2   43[COMRAM] PTR unsigned char 
  1689 ;;		 -> fdcReset@cap_w(4), fdcSleep@cap_w(4), fdcInit@cap_w(4), 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;		None               void
  1694 ;; Registers used:
  1695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1701 ;;      Params:         2       0       0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0
  1704 ;;      Totals:         2       0       0       0       0       0       0
  1705 ;;Total ram usage:        2 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    5
  1708 ;; This function calls:
  1709 ;;		_i2cIdle
  1710 ;;		_i2cStart
  1711 ;; This function is called by:
  1712 ;;		_fdcInit
  1713 ;;		_fdcSleep
  1714 ;;		_fdcReset
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text9
  1719  001150                     __ptext9:
  1720                           	opt stack 0
  1721  001150                     _fdcWrite:
  1722                           	opt stack 24
  1723                           
  1724                           ;fdc2214.c: 61: i2cStart(input,4);
  1725                           
  1726                           ;incstack = 0
  1727  001150  C02C  F024         	movff	fdcWrite@input,i2cStart@input
  1728  001154  C02D  F025         	movff	fdcWrite@input+1,i2cStart@input+1
  1729  001158  0E04               	movlw	4
  1730  00115A  6E26               	movwf	i2cStart@len,c
  1731  00115C  ECE2  F007         	call	_i2cStart	;wreg free
  1732                           
  1733                           ;fdc2214.c: 62: SSPCON2bits.PEN = 1;
  1734  001160  84C5               	bsf	4037,2,c	;volatile
  1735                           
  1736                           ;fdc2214.c: 63: i2cIdle();
  1737  001162  EC81  F008         	call	_i2cIdle	;wreg free
  1738  001166  0012               	return		;funcret
  1739  001168                     __end_of_fdcWrite:
  1740                           	opt stack 0
  1741                           tblptru	equ	0xFF8
  1742                           prodh	equ	0xFF4
  1743                           prodl	equ	0xFF3
  1744                           postinc0	equ	0xFEE
  1745                           wreg	equ	0xFE8
  1746                           indf2	equ	0xFDF
  1747                           fsr2h	equ	0xFDA
  1748                           fsr2l	equ	0xFD9
  1749                           status	equ	0xFD8
  1750                           
  1751 ;; *************** function _i2cStart *****************
  1752 ;; Defined at:
  1753 ;;		line 34 in file "i2clib.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  input           2   35[COMRAM] PTR unsigned char 
  1756 ;;		 -> fdcReset@cap_w(4), fdcSleep@cap_w(4), fdcInit@cap_w(4), fdcRead@header(2), 
  1757 ;;  len             1   37[COMRAM] unsigned char 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  i               2   41[COMRAM] int 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;		None               void
  1762 ;; Registers used:
  1763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1769 ;;      Params:         3       0       0       0       0       0       0
  1770 ;;      Locals:         2       0       0       0       0       0       0
  1771 ;;      Temps:          3       0       0       0       0       0       0
  1772 ;;      Totals:         8       0       0       0       0       0       0
  1773 ;;Total ram usage:        8 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    4
  1776 ;; This function calls:
  1777 ;;		_i2cIdle
  1778 ;; This function is called by:
  1779 ;;		_fdcRead
  1780 ;;		_fdcWrite
  1781 ;;		_writePot
  1782 ;;		_readPot
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text10
  1787  000FC4                     __ptext10:
  1788                           	opt stack 0
  1789  000FC4                     _i2cStart:
  1790                           	opt stack 24
  1791                           
  1792                           ;i2clib.c: 36: SSPCON2bits.SEN = 1;
  1793                           
  1794                           ;incstack = 0
  1795  000FC4  80C5               	bsf	4037,0,c	;volatile
  1796                           
  1797                           ;i2clib.c: 37: i2cIdle();
  1798  000FC6  EC81  F008         	call	_i2cIdle	;wreg free
  1799                           
  1800                           ;i2clib.c: 38: for(int i = 0;i<len;i++){
  1801  000FCA  0E00               	movlw	0
  1802  000FCC  6E2B               	movwf	i2cStart@i+1,c
  1803  000FCE  0E00               	movlw	0
  1804  000FD0  6E2A               	movwf	i2cStart@i,c
  1805  000FD2  D00C               	goto	l2103
  1806  000FD4                     l2097:
  1807                           
  1808                           ;i2clib.c: 39: SSPBUF = input[i];
  1809  000FD4  502A               	movf	i2cStart@i,w,c
  1810  000FD6  2424               	addwf	i2cStart@input,w,c
  1811  000FD8  6ED9               	movwf	fsr2l,c
  1812  000FDA  502B               	movf	i2cStart@i+1,w,c
  1813  000FDC  2025               	addwfc	i2cStart@input+1,w,c
  1814  000FDE  6EDA               	movwf	fsr2h,c
  1815  000FE0  50DF               	movf	indf2,w,c
  1816  000FE2  6EC9               	movwf	4041,c	;volatile
  1817                           
  1818                           ;i2clib.c: 40: i2cIdle();
  1819  000FE4  EC81  F008         	call	_i2cIdle	;wreg free
  1820  000FE8  4A2A               	infsnz	i2cStart@i,f,c
  1821  000FEA  2A2B               	incf	i2cStart@i+1,f,c
  1822  000FEC                     l2103:
  1823  000FEC  5026               	movf	i2cStart@len,w,c
  1824  000FEE  6E27               	movwf	??_i2cStart& (0+255),c
  1825  000FF0  6A28               	clrf	(??_i2cStart+1)& (0+255),c
  1826  000FF2  5027               	movf	??_i2cStart,w,c
  1827  000FF4  5C2A               	subwf	i2cStart@i,w,c
  1828  000FF6  502B               	movf	i2cStart@i+1,w,c
  1829  000FF8  0A80               	xorlw	128
  1830  000FFA  6E29               	movwf	(??_i2cStart+2)& (0+255),c
  1831  000FFC  5028               	movf	??_i2cStart+1,w,c
  1832  000FFE  0A80               	xorlw	128
  1833  001000  5829               	subwfb	(??_i2cStart+2)& (0+255),w,c
  1834  001002  B0D8               	btfsc	status,0,c
  1835  001004  0012               	return	
  1836  001006  D7E6               	goto	l2097
  1837  001008                     __end_of_i2cStart:
  1838                           	opt stack 0
  1839                           tblptru	equ	0xFF8
  1840                           prodh	equ	0xFF4
  1841                           prodl	equ	0xFF3
  1842                           postinc0	equ	0xFEE
  1843                           wreg	equ	0xFE8
  1844                           indf2	equ	0xFDF
  1845                           fsr2h	equ	0xFDA
  1846                           fsr2l	equ	0xFD9
  1847                           status	equ	0xFD8
  1848                           
  1849 ;; *************** function _i2cIdle *****************
  1850 ;; Defined at:
  1851 ;;		line 30 in file "i2clib.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;		None
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;		None
  1856 ;; Return value:  Size  Location     Type
  1857 ;;		None               void
  1858 ;; Registers used:
  1859 ;;		wreg, status,2, status,0
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1865 ;;      Params:         0       0       0       0       0       0       0
  1866 ;;      Locals:         0       0       0       0       0       0       0
  1867 ;;      Temps:          1       0       0       0       0       0       0
  1868 ;;      Totals:         1       0       0       0       0       0       0
  1869 ;;Total ram usage:        1 bytes
  1870 ;; Hardware stack levels used:    1
  1871 ;; Hardware stack levels required when called:    3
  1872 ;; This function calls:
  1873 ;;		Nothing
  1874 ;; This function is called by:
  1875 ;;		_fdcRead
  1876 ;;		_fdcWrite
  1877 ;;		_i2cStart
  1878 ;;		_writePot
  1879 ;;		_readPot
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text11
  1884  001102                     __ptext11:
  1885                           	opt stack 0
  1886  001102                     _i2cIdle:
  1887                           	opt stack 24
  1888  001102                     l2089:
  1889  001102  A4C7               	btfss	4039,2,c	;volatile
  1890  001104  D003               	goto	u1260
  1891  001106  6A23               	clrf	??_i2cIdle& (0+255),c
  1892  001108  2A23               	incf	??_i2cIdle& (0+255),f,c
  1893  00110A  D001               	goto	u1268
  1894  00110C                     u1260:
  1895  00110C  6A23               	clrf	??_i2cIdle& (0+255),c
  1896  00110E                     u1268:
  1897  00110E  50C5               	movf	4037,w,c	;volatile
  1898  001110  0B1F               	andlw	31
  1899  001112  1023               	iorwf	??_i2cIdle,w,c
  1900  001114  0900               	iorlw	0
  1901  001116  B4D8               	btfsc	status,2,c
  1902  001118  0012               	return	
  1903  00111A  D7F3               	goto	l2089
  1904  00111C                     __end_of_i2cIdle:
  1905                           	opt stack 0
  1906                           tblptru	equ	0xFF8
  1907                           prodh	equ	0xFF4
  1908                           prodl	equ	0xFF3
  1909                           postinc0	equ	0xFEE
  1910                           wreg	equ	0xFE8
  1911                           indf2	equ	0xFDF
  1912                           fsr2h	equ	0xFDA
  1913                           fsr2l	equ	0xFD9
  1914                           status	equ	0xFD8
  1915                           
  1916 ;; *************** function _delay *****************
  1917 ;; Defined at:
  1918 ;;		line 27 in file "timer.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  sec             3   69[COMRAM] float 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  t2              2   78[COMRAM] volatile unsigned int 
  1923 ;;  t1              2   76[COMRAM] volatile unsigned int 
  1924 ;;  done            1   75[COMRAM] unsigned char 
  1925 ;;  i               1   74[COMRAM] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;		None               void
  1928 ;; Registers used:
  1929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1935 ;;      Params:         3       0       0       0       0       0       0
  1936 ;;      Locals:         6       0       0       0       0       0       0
  1937 ;;      Temps:          2       0       0       0       0       0       0
  1938 ;;      Totals:        11       0       0       0       0       0       0
  1939 ;;Total ram usage:       11 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    6
  1942 ;; This function calls:
  1943 ;;		___ftge
  1944 ;;		___ftmul
  1945 ;;		___lwtoft
  1946 ;;		_writeVal
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text12
  1953  000C18                     __ptext12:
  1954                           	opt stack 0
  1955  000C18                     _delay:
  1956                           	opt stack 24
  1957                           
  1958                           ;timer.c: 28: T3CONbits.TMR3ON = 1;
  1959                           
  1960                           ;incstack = 0
  1961  000C18  80B1               	bsf	4017,0,c	;volatile
  1962                           
  1963                           ;timer.c: 29: unsigned char done = 0, i = 0;
  1964  000C1A  0E00               	movlw	0
  1965  000C1C  6E4C               	movwf	delay@done,c
  1966  000C1E  0E00               	movlw	0
  1967  000C20  6E4B               	movwf	delay@i,c
  1968                           
  1969                           ;timer.c: 30: volatile unsigned int t1=count,t2=count;
  1970  000C22  C051  F04D         	movff	_count,delay@t1	;volatile
  1971  000C26  C052  F04E         	movff	_count+1,delay@t1+1	;volatile
  1972  000C2A  C051  F04F         	movff	_count,delay@t2	;volatile
  1973  000C2E  C052  F050         	movff	_count+1,delay@t2+1	;volatile
  1974                           
  1975                           ;timer.c: 31: TMR3 = 0x3CAF;
  1976  000C32  0E3C               	movlw	60
  1977  000C34  6EB3               	movwf	4019,c	;volatile
  1978  000C36  0EAF               	movlw	175
  1979  000C38  6EB2               	movwf	4018,c	;volatile
  1980                           
  1981                           ;timer.c: 32: while(!done){
  1982  000C3A  D03D               	goto	l249
  1983  000C3C                     l250:
  1984                           
  1985                           ;timer.c: 33: t2 = count;
  1986  000C3C  C051  F04F         	movff	_count,delay@t2	;volatile
  1987  000C40  C052  F050         	movff	_count+1,delay@t2+1	;volatile
  1988                           
  1989                           ;timer.c: 34: writeVal(count);
  1990  000C44  C051  F03D         	movff	_count,writeVal@val	;volatile
  1991  000C48  C052  F03E         	movff	_count+1,writeVal@val+1	;volatile
  1992  000C4C  6A3F               	clrf	writeVal@val+2,c
  1993  000C4E  6A40               	clrf	writeVal@val+3,c
  1994  000C50  EC04  F008         	call	_writeVal	;wreg free
  1995                           
  1996                           ;timer.c: 35: if((t2-t1)*0.05>=sec){
  1997  000C54  0ECD               	movlw	205
  1998  000C56  6E31               	movwf	___ftmul@f2,c
  1999  000C58  0E4C               	movlw	76
  2000  000C5A  6E32               	movwf	___ftmul@f2+1,c
  2001  000C5C  0E3D               	movlw	61
  2002  000C5E  6E33               	movwf	___ftmul@f2+2,c
  2003  000C60  C04D  F049         	movff	delay@t1,??_delay	;volatile
  2004  000C64  C04E  F04A         	movff	delay@t1+1,??_delay+1	;volatile
  2005  000C68  1E49               	comf	??_delay,f,c
  2006  000C6A  1E4A               	comf	??_delay+1,f,c
  2007  000C6C  4A49               	infsnz	??_delay,f,c
  2008  000C6E  2A4A               	incf	??_delay+1,f,c
  2009  000C70  504F               	movf	delay@t2,w,c	;volatile
  2010  000C72  2449               	addwf	??_delay,w,c
  2011  000C74  6E2B               	movwf	___lwtoft@c,c
  2012  000C76  5050               	movf	delay@t2+1,w,c	;volatile
  2013  000C78  204A               	addwfc	??_delay+1,w,c
  2014  000C7A  6E2C               	movwf	___lwtoft@c+1,c
  2015  000C7C  EC35  F008         	call	___lwtoft	;wreg free
  2016  000C80  C02B  F02E         	movff	?___lwtoft,___ftmul@f1
  2017  000C84  C02C  F02F         	movff	?___lwtoft+1,___ftmul@f1+1
  2018  000C88  C02D  F030         	movff	?___lwtoft+2,___ftmul@f1+2
  2019  000C8C  ECE6  F004         	call	___ftmul	;wreg free
  2020  000C90  C02E  F03D         	movff	?___ftmul,___ftge@ff1
  2021  000C94  C02F  F03E         	movff	?___ftmul+1,___ftge@ff1+1
  2022  000C98  C030  F03F         	movff	?___ftmul+2,___ftge@ff1+2
  2023  000C9C  C046  F040         	movff	delay@sec,___ftge@ff2
  2024  000CA0  C047  F041         	movff	delay@sec+1,___ftge@ff2+1
  2025  000CA4  C048  F042         	movff	delay@sec+2,___ftge@ff2+2
  2026  000CA8  ECA8  F006         	call	___ftge	;wreg free
  2027  000CAC  A0D8               	btfss	status,0,c
  2028  000CAE  D003               	goto	l249
  2029                           
  2030                           ;timer.c: 36: done = 1;
  2031  000CB0  0E01               	movlw	1
  2032  000CB2  6E4C               	movwf	delay@done,c
  2033                           
  2034                           ;timer.c: 37: T3CONbits.TMR3ON = 0;
  2035  000CB4  90B1               	bcf	4017,0,c	;volatile
  2036  000CB6                     l249:
  2037  000CB6  504C               	movf	delay@done,w,c
  2038  000CB8  A4D8               	btfss	status,2,c
  2039  000CBA  0012               	return	
  2040  000CBC  D7BF               	goto	l250
  2041  000CBE                     __end_of_delay:
  2042                           	opt stack 0
  2043                           tblptru	equ	0xFF8
  2044                           prodh	equ	0xFF4
  2045                           prodl	equ	0xFF3
  2046                           postinc0	equ	0xFEE
  2047                           wreg	equ	0xFE8
  2048                           indf2	equ	0xFDF
  2049                           fsr2h	equ	0xFDA
  2050                           fsr2l	equ	0xFD9
  2051                           status	equ	0xFD8
  2052                           
  2053 ;; *************** function _writeVal *****************
  2054 ;; Defined at:
  2055 ;;		line 72 in file "uart.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  val             4   60[COMRAM] unsigned long 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  buffer         20    0[BANK0 ] unsigned char [20]
  2060 ;; Return value:  Size  Location     Type
  2061 ;;		None               void
  2062 ;; Registers used:
  2063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2069 ;;      Params:         4       0       0       0       0       0       0
  2070 ;;      Locals:         0      20       0       0       0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0
  2072 ;;      Totals:         4      20       0       0       0       0       0
  2073 ;;Total ram usage:       24 bytes
  2074 ;; Hardware stack levels used:    1
  2075 ;; Hardware stack levels required when called:    5
  2076 ;; This function calls:
  2077 ;;		_ultoa
  2078 ;;		_writeStr
  2079 ;; This function is called by:
  2080 ;;		_fdcMeas
  2081 ;;		_main
  2082 ;;		_delay
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text13
  2087  001008                     __ptext13:
  2088                           	opt stack 0
  2089  001008                     _writeVal:
  2090                           	opt stack 25
  2091                           
  2092                           ;uart.c: 73: char buffer[20];
  2093                           ;uart.c: 74: ultoa(buffer,val,10);
  2094                           
  2095                           ;incstack = 0
  2096  001008  0E80               	movlw	low writeVal@buffer
  2097  00100A  6E30               	movwf	ultoa@buf,c
  2098  00100C  0E00               	movlw	high writeVal@buffer
  2099  00100E  6E31               	movwf	ultoa@buf+1,c
  2100  001010  C03D  F032         	movff	writeVal@val,ultoa@val
  2101  001014  C03E  F033         	movff	writeVal@val+1,ultoa@val+1
  2102  001018  C03F  F034         	movff	writeVal@val+2,ultoa@val+2
  2103  00101C  C040  F035         	movff	writeVal@val+3,ultoa@val+3
  2104  001020  0E00               	movlw	0
  2105  001022  6E37               	movwf	ultoa@base+1,c
  2106  001024  0E0A               	movlw	10
  2107  001026  6E36               	movwf	ultoa@base,c
  2108  001028  EC6B  F004         	call	_ultoa	;wreg free
  2109                           
  2110                           ;uart.c: 75: writeStr(buffer);
  2111  00102C  0E80               	movlw	low writeVal@buffer
  2112  00102E  6E24               	movwf	writeStr@str,c
  2113  001030  0E00               	movlw	high writeVal@buffer
  2114  001032  6E25               	movwf	writeStr@str+1,c
  2115  001034  EC71  F007         	call	_writeStr	;wreg free
  2116  001038  0012               	return		;funcret
  2117  00103A                     __end_of_writeVal:
  2118                           	opt stack 0
  2119                           tblptru	equ	0xFF8
  2120                           prodh	equ	0xFF4
  2121                           prodl	equ	0xFF3
  2122                           postinc0	equ	0xFEE
  2123                           wreg	equ	0xFE8
  2124                           indf2	equ	0xFDF
  2125                           fsr2h	equ	0xFDA
  2126                           fsr2l	equ	0xFD9
  2127                           status	equ	0xFD8
  2128                           
  2129 ;; *************** function _writeStr *****************
  2130 ;; Defined at:
  2131 ;;		line 47 in file "uart.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  str             2   35[COMRAM] PTR unsigned char 
  2134 ;;		 -> writeVal@buffer(20), STR_9(5), STR_8(5), STR_7(10), 
  2135 ;;		 -> STR_6(6), STR_5(7), STR_4(6), STR_3(6), 
  2136 ;;		 -> STR_2(6), STR_1(6), 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  i               1   39[COMRAM] unsigned char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;		None               void
  2141 ;; Registers used:
  2142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2148 ;;      Params:         2       0       0       0       0       0       0
  2149 ;;      Locals:         1       0       0       0       0       0       0
  2150 ;;      Temps:          2       0       0       0       0       0       0
  2151 ;;      Totals:         5       0       0       0       0       0       0
  2152 ;;Total ram usage:        5 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:    4
  2155 ;; This function calls:
  2156 ;;		_writeChar
  2157 ;; This function is called by:
  2158 ;;		_fdcMeas
  2159 ;;		_main
  2160 ;;		_writeVal
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text14
  2165  000EE2                     __ptext14:
  2166                           	opt stack 0
  2167  000EE2                     _writeStr:
  2168                           	opt stack 25
  2169                           
  2170                           ;uart.c: 48: for(char i = 0;str[i]!='\0';i++){
  2171                           
  2172                           ;incstack = 0
  2173  000EE2  0E00               	movlw	0
  2174  000EE4  6E28               	movwf	writeStr@i,c
  2175  000EE6  D01D               	goto	l2159
  2176  000EE8                     l2155:
  2177                           
  2178                           ;uart.c: 49: writeChar(str[i]);
  2179  000EE8  5028               	movf	writeStr@i,w,c
  2180  000EEA  0D01               	mullw	1
  2181  000EEC  C024  F026         	movff	writeStr@str,??_writeStr
  2182  000EF0  C025  F027         	movff	writeStr@str+1,??_writeStr+1
  2183  000EF4  50F3               	movf	prodl,w,c
  2184  000EF6  2626               	addwf	??_writeStr,f,c
  2185  000EF8  50F4               	movf	prodh,w,c
  2186  000EFA  2227               	addwfc	??_writeStr+1,f,c
  2187  000EFC  C026  FFF6         	movff	??_writeStr,tblptrl
  2188  000F00  C027  FFF7         	movff	??_writeStr+1,tblptrh
  2189  000F04  6AF8               	clrf	tblptru,c
  2190  000F06  0E05               	movlw	(high __ramtop+-1)
  2191  000F08  64F7               	cpfsgt	tblptrh,c
  2192  000F0A  D003               	bra	u1367
  2193  000F0C  0008               	tblrd		*
  2194  000F0E  50F5               	movf	tablat,w,c
  2195  000F10  D005               	bra	u1360
  2196  000F12                     u1367:
  2197  000F12  CFF6 FFD9          	movff	tblptrl,fsr2l
  2198  000F16  CFF7 FFDA          	movff	tblptrh,fsr2h
  2199  000F1A  50DF               	movf	indf2,w,c
  2200  000F1C                     u1360:
  2201  000F1C  ECC6  F008         	call	_writeChar
  2202  000F20  2A28               	incf	writeStr@i,f,c
  2203  000F22                     l2159:
  2204  000F22  5028               	movf	writeStr@i,w,c
  2205  000F24  0D01               	mullw	1
  2206  000F26  C024  F026         	movff	writeStr@str,??_writeStr
  2207  000F2A  C025  F027         	movff	writeStr@str+1,??_writeStr+1
  2208  000F2E  50F3               	movf	prodl,w,c
  2209  000F30  2626               	addwf	??_writeStr,f,c
  2210  000F32  50F4               	movf	prodh,w,c
  2211  000F34  2227               	addwfc	??_writeStr+1,f,c
  2212  000F36  C026  FFF6         	movff	??_writeStr,tblptrl
  2213  000F3A  C027  FFF7         	movff	??_writeStr+1,tblptrh
  2214  000F3E  6AF8               	clrf	tblptru,c
  2215  000F40  0E05               	movlw	(high __ramtop+-1)
  2216  000F42  64F7               	cpfsgt	tblptrh,c
  2217  000F44  D003               	bra	u1377
  2218  000F46  0008               	tblrd		*
  2219  000F48  50F5               	movf	tablat,w,c
  2220  000F4A  D005               	bra	u1370
  2221  000F4C                     u1377:
  2222  000F4C  CFF6 FFD9          	movff	tblptrl,fsr2l
  2223  000F50  CFF7 FFDA          	movff	tblptrh,fsr2h
  2224  000F54  50DF               	movf	indf2,w,c
  2225  000F56                     u1370:
  2226  000F56  0900               	iorlw	0
  2227  000F58  B4D8               	btfsc	status,2,c
  2228  000F5A  0012               	return	
  2229  000F5C  D7C5               	goto	l2155
  2230  000F5E                     __end_of_writeStr:
  2231                           	opt stack 0
  2232                           tblptru	equ	0xFF8
  2233                           tblptrh	equ	0xFF7
  2234                           tblptrl	equ	0xFF6
  2235                           tablat	equ	0xFF5
  2236                           prodh	equ	0xFF4
  2237                           prodl	equ	0xFF3
  2238                           postinc0	equ	0xFEE
  2239                           wreg	equ	0xFE8
  2240                           indf2	equ	0xFDF
  2241                           fsr2h	equ	0xFDA
  2242                           fsr2l	equ	0xFD9
  2243                           status	equ	0xFD8
  2244                           
  2245 ;; *************** function _writeChar *****************
  2246 ;; Defined at:
  2247 ;;		line 41 in file "uart.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;  c               1    wreg     unsigned char 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  c               1   34[COMRAM] unsigned char 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;		None               void
  2254 ;; Registers used:
  2255 ;;		wreg
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2261 ;;      Params:         0       0       0       0       0       0       0
  2262 ;;      Locals:         1       0       0       0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0
  2264 ;;      Totals:         1       0       0       0       0       0       0
  2265 ;;Total ram usage:        1 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; Hardware stack levels required when called:    3
  2268 ;; This function calls:
  2269 ;;		Nothing
  2270 ;; This function is called by:
  2271 ;;		_fdcMeas
  2272 ;;		_main
  2273 ;;		_writeStr
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text15
  2278  00118C                     __ptext15:
  2279                           	opt stack 0
  2280  00118C                     _writeChar:
  2281                           	opt stack 25
  2282                           
  2283                           ;incstack = 0
  2284                           ;writeChar@c stored from wreg
  2285  00118C  6E23               	movwf	writeChar@c,c
  2286  00118E                     l283:
  2287  00118E  A2AC               	btfss	4012,1,c	;volatile
  2288  001190  D7FE               	goto	l283
  2289                           
  2290                           ;uart.c: 43: TXREG = c;
  2291  001192  C023  FFAD         	movff	writeChar@c,4013	;volatile
  2292  001196  0012               	return		;funcret
  2293  001198                     __end_of_writeChar:
  2294                           	opt stack 0
  2295                           tblptru	equ	0xFF8
  2296                           tblptrh	equ	0xFF7
  2297                           tblptrl	equ	0xFF6
  2298                           tablat	equ	0xFF5
  2299                           prodh	equ	0xFF4
  2300                           prodl	equ	0xFF3
  2301                           postinc0	equ	0xFEE
  2302                           wreg	equ	0xFE8
  2303                           indf2	equ	0xFDF
  2304                           fsr2h	equ	0xFDA
  2305                           fsr2l	equ	0xFD9
  2306                           status	equ	0xFD8
  2307                           
  2308 ;; *************** function _ultoa *****************
  2309 ;; Defined at:
  2310 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ltoa.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  buf             2   47[COMRAM] PTR unsigned char 
  2313 ;;		 -> writeVal@buffer(20), 
  2314 ;;  val             4   49[COMRAM] unsigned long 
  2315 ;;  base            2   53[COMRAM] int 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  v               4   55[COMRAM] unsigned long 
  2318 ;;  c               1   59[COMRAM] unsigned char 
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  2   47[COMRAM] PTR unsigned char 
  2321 ;; Registers used:
  2322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2328 ;;      Params:         8       0       0       0       0       0       0
  2329 ;;      Locals:         5       0       0       0       0       0       0
  2330 ;;      Temps:          0       0       0       0       0       0       0
  2331 ;;      Totals:        13       0       0       0       0       0       0
  2332 ;;Total ram usage:       13 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    4
  2335 ;; This function calls:
  2336 ;;		___lldiv
  2337 ;;		___llmod
  2338 ;; This function is called by:
  2339 ;;		_writeVal
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text16
  2344  0008D6                     __ptext16:
  2345                           	opt stack 0
  2346  0008D6                     _ultoa:
  2347                           	opt stack 25
  2348                           
  2349                           ;incstack = 0
  2350  0008D6  C032  F038         	movff	ultoa@val,ultoa@v
  2351  0008DA  C033  F039         	movff	ultoa@val+1,ultoa@v+1
  2352  0008DE  C034  F03A         	movff	ultoa@val+2,ultoa@v+2
  2353  0008E2  C035  F03B         	movff	ultoa@val+3,ultoa@v+3
  2354  0008E6                     l2163:
  2355  0008E6  C038  F023         	movff	ultoa@v,___lldiv@dividend
  2356  0008EA  C039  F024         	movff	ultoa@v+1,___lldiv@dividend+1
  2357  0008EE  C03A  F025         	movff	ultoa@v+2,___lldiv@dividend+2
  2358  0008F2  C03B  F026         	movff	ultoa@v+3,___lldiv@dividend+3
  2359  0008F6  C036  F027         	movff	ultoa@base,___lldiv@divisor
  2360  0008FA  C037  F028         	movff	ultoa@base+1,___lldiv@divisor+1
  2361  0008FE  0E00               	movlw	0
  2362  000900  BE28               	btfsc	___lldiv@divisor+1,7,c
  2363  000902  0EFF               	movlw	-1
  2364  000904  6E29               	movwf	___lldiv@divisor+2,c
  2365  000906  6E2A               	movwf	___lldiv@divisor+3,c
  2366  000908  ECF0  F006         	call	___lldiv	;wreg free
  2367  00090C  C023  F038         	movff	?___lldiv,ultoa@v
  2368  000910  C024  F039         	movff	?___lldiv+1,ultoa@v+1
  2369  000914  C025  F03A         	movff	?___lldiv+2,ultoa@v+2
  2370  000918  C026  F03B         	movff	?___lldiv+3,ultoa@v+3
  2371  00091C  4A30               	infsnz	ultoa@buf,f,c
  2372  00091E  2A31               	incf	ultoa@buf+1,f,c
  2373  000920  5038               	movf	ultoa@v,w,c
  2374  000922  1039               	iorwf	ultoa@v+1,w,c
  2375  000924  103A               	iorwf	ultoa@v+2,w,c
  2376  000926  103B               	iorwf	ultoa@v+3,w,c
  2377  000928  A4D8               	btfss	status,2,c
  2378  00092A  D7DD               	goto	l2163
  2379  00092C  C030  FFD9         	movff	ultoa@buf,fsr2l
  2380  000930  C031  FFDA         	movff	ultoa@buf+1,fsr2h
  2381  000934  0E00               	movlw	0
  2382  000936  6EDF               	movwf	indf2,c
  2383  000938  0630               	decf	ultoa@buf,f,c
  2384  00093A  A0D8               	btfss	status,0,c
  2385  00093C  0631               	decf	ultoa@buf+1,f,c
  2386  00093E                     l2173:
  2387  00093E  C032  F023         	movff	ultoa@val,___llmod@dividend
  2388  000942  C033  F024         	movff	ultoa@val+1,___llmod@dividend+1
  2389  000946  C034  F025         	movff	ultoa@val+2,___llmod@dividend+2
  2390  00094A  C035  F026         	movff	ultoa@val+3,___llmod@dividend+3
  2391  00094E  C036  F027         	movff	ultoa@base,___llmod@divisor
  2392  000952  C037  F028         	movff	ultoa@base+1,___llmod@divisor+1
  2393  000956  0E00               	movlw	0
  2394  000958  BE28               	btfsc	___llmod@divisor+1,7,c
  2395  00095A  0EFF               	movlw	-1
  2396  00095C  6E29               	movwf	___llmod@divisor+2,c
  2397  00095E  6E2A               	movwf	___llmod@divisor+3,c
  2398  000960  ECAF  F007         	call	___llmod	;wreg free
  2399  000964  5023               	movf	?___llmod,w,c
  2400  000966  6E3C               	movwf	ultoa@c,c
  2401  000968  C032  F023         	movff	ultoa@val,___lldiv@dividend
  2402  00096C  C033  F024         	movff	ultoa@val+1,___lldiv@dividend+1
  2403  000970  C034  F025         	movff	ultoa@val+2,___lldiv@dividend+2
  2404  000974  C035  F026         	movff	ultoa@val+3,___lldiv@dividend+3
  2405  000978  C036  F027         	movff	ultoa@base,___lldiv@divisor
  2406  00097C  C037  F028         	movff	ultoa@base+1,___lldiv@divisor+1
  2407  000980  0E00               	movlw	0
  2408  000982  BE28               	btfsc	___lldiv@divisor+1,7,c
  2409  000984  0EFF               	movlw	-1
  2410  000986  6E29               	movwf	___lldiv@divisor+2,c
  2411  000988  6E2A               	movwf	___lldiv@divisor+3,c
  2412  00098A  ECF0  F006         	call	___lldiv	;wreg free
  2413  00098E  C023  F032         	movff	?___lldiv,ultoa@val
  2414  000992  C024  F033         	movff	?___lldiv+1,ultoa@val+1
  2415  000996  C025  F034         	movff	?___lldiv+2,ultoa@val+2
  2416  00099A  C026  F035         	movff	?___lldiv+3,ultoa@val+3
  2417  00099E  0E09               	movlw	9
  2418  0009A0  643C               	cpfsgt	ultoa@c,c
  2419  0009A2  D002               	goto	l718
  2420  0009A4  0E07               	movlw	7
  2421  0009A6  263C               	addwf	ultoa@c,f,c
  2422  0009A8                     l718:
  2423  0009A8  0E30               	movlw	48
  2424  0009AA  263C               	addwf	ultoa@c,f,c
  2425  0009AC  C030  FFD9         	movff	ultoa@buf,fsr2l
  2426  0009B0  C031  FFDA         	movff	ultoa@buf+1,fsr2h
  2427  0009B4  C03C  FFDF         	movff	ultoa@c,indf2
  2428  0009B8  0630               	decf	ultoa@buf,f,c
  2429  0009BA  A0D8               	btfss	status,0,c
  2430  0009BC  0631               	decf	ultoa@buf+1,f,c
  2431  0009BE  5032               	movf	ultoa@val,w,c
  2432  0009C0  1033               	iorwf	ultoa@val+1,w,c
  2433  0009C2  1034               	iorwf	ultoa@val+2,w,c
  2434  0009C4  1035               	iorwf	ultoa@val+3,w,c
  2435  0009C6  B4D8               	btfsc	status,2,c
  2436  0009C8  0012               	return	
  2437  0009CA  D7B9               	goto	l2173
  2438  0009CC                     __end_of_ultoa:
  2439                           	opt stack 0
  2440                           tblptru	equ	0xFF8
  2441                           tblptrh	equ	0xFF7
  2442                           tblptrl	equ	0xFF6
  2443                           tablat	equ	0xFF5
  2444                           prodh	equ	0xFF4
  2445                           prodl	equ	0xFF3
  2446                           postinc0	equ	0xFEE
  2447                           wreg	equ	0xFE8
  2448                           indf2	equ	0xFDF
  2449                           fsr2h	equ	0xFDA
  2450                           fsr2l	equ	0xFD9
  2451                           status	equ	0xFD8
  2452                           
  2453 ;; *************** function ___llmod *****************
  2454 ;; Defined at:
  2455 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  dividend        4   34[COMRAM] unsigned long 
  2458 ;;  divisor         4   38[COMRAM] unsigned long 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  counter         1   42[COMRAM] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  4   34[COMRAM] unsigned long 
  2463 ;; Registers used:
  2464 ;;		wreg, status,2, status,0
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2470 ;;      Params:         8       0       0       0       0       0       0
  2471 ;;      Locals:         1       0       0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0
  2473 ;;      Totals:         9       0       0       0       0       0       0
  2474 ;;Total ram usage:        9 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    3
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_ultoa
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text17
  2485  000F5E                     __ptext17:
  2486                           	opt stack 0
  2487  000F5E                     ___llmod:
  2488                           	opt stack 25
  2489                           
  2490                           ;incstack = 0
  2491  000F5E  5027               	movf	___llmod@divisor,w,c
  2492  000F60  1028               	iorwf	___llmod@divisor+1,w,c
  2493  000F62  1029               	iorwf	___llmod@divisor+2,w,c
  2494  000F64  102A               	iorwf	___llmod@divisor+3,w,c
  2495  000F66  B4D8               	btfsc	status,2,c
  2496  000F68  D024               	goto	l671
  2497  000F6A  0E01               	movlw	1
  2498  000F6C  6E2B               	movwf	___llmod@counter,c
  2499  000F6E  D006               	goto	l2137
  2500  000F70                     l2135:
  2501  000F70  90D8               	bcf	status,0,c
  2502  000F72  3627               	rlcf	___llmod@divisor,f,c
  2503  000F74  3628               	rlcf	___llmod@divisor+1,f,c
  2504  000F76  3629               	rlcf	___llmod@divisor+2,f,c
  2505  000F78  362A               	rlcf	___llmod@divisor+3,f,c
  2506  000F7A  2A2B               	incf	___llmod@counter,f,c
  2507  000F7C                     l2137:
  2508  000F7C  AE2A               	btfss	___llmod@divisor+3,7,c
  2509  000F7E  D7F8               	goto	l2135
  2510  000F80                     l2139:
  2511  000F80  5027               	movf	___llmod@divisor,w,c
  2512  000F82  5C23               	subwf	___llmod@dividend,w,c
  2513  000F84  5028               	movf	___llmod@divisor+1,w,c
  2514  000F86  5824               	subwfb	___llmod@dividend+1,w,c
  2515  000F88  5029               	movf	___llmod@divisor+2,w,c
  2516  000F8A  5825               	subwfb	___llmod@dividend+2,w,c
  2517  000F8C  502A               	movf	___llmod@divisor+3,w,c
  2518  000F8E  5826               	subwfb	___llmod@dividend+3,w,c
  2519  000F90  A0D8               	btfss	status,0,c
  2520  000F92  D008               	goto	l2143
  2521  000F94  5027               	movf	___llmod@divisor,w,c
  2522  000F96  5E23               	subwf	___llmod@dividend,f,c
  2523  000F98  5028               	movf	___llmod@divisor+1,w,c
  2524  000F9A  5A24               	subwfb	___llmod@dividend+1,f,c
  2525  000F9C  5029               	movf	___llmod@divisor+2,w,c
  2526  000F9E  5A25               	subwfb	___llmod@dividend+2,f,c
  2527  000FA0  502A               	movf	___llmod@divisor+3,w,c
  2528  000FA2  5A26               	subwfb	___llmod@dividend+3,f,c
  2529  000FA4                     l2143:
  2530  000FA4  90D8               	bcf	status,0,c
  2531  000FA6  322A               	rrcf	___llmod@divisor+3,f,c
  2532  000FA8  3229               	rrcf	___llmod@divisor+2,f,c
  2533  000FAA  3228               	rrcf	___llmod@divisor+1,f,c
  2534  000FAC  3227               	rrcf	___llmod@divisor,f,c
  2535  000FAE  2E2B               	decfsz	___llmod@counter,f,c
  2536  000FB0  D7E7               	goto	l2139
  2537  000FB2                     l671:
  2538  000FB2  C023  F023         	movff	___llmod@dividend,?___llmod
  2539  000FB6  C024  F024         	movff	___llmod@dividend+1,?___llmod+1
  2540  000FBA  C025  F025         	movff	___llmod@dividend+2,?___llmod+2
  2541  000FBE  C026  F026         	movff	___llmod@dividend+3,?___llmod+3
  2542  000FC2  0012               	return		;funcret
  2543  000FC4                     __end_of___llmod:
  2544                           	opt stack 0
  2545                           tblptru	equ	0xFF8
  2546                           tblptrh	equ	0xFF7
  2547                           tblptrl	equ	0xFF6
  2548                           tablat	equ	0xFF5
  2549                           prodh	equ	0xFF4
  2550                           prodl	equ	0xFF3
  2551                           postinc0	equ	0xFEE
  2552                           wreg	equ	0xFE8
  2553                           indf2	equ	0xFDF
  2554                           fsr2h	equ	0xFDA
  2555                           fsr2l	equ	0xFD9
  2556                           status	equ	0xFD8
  2557                           
  2558 ;; *************** function ___lldiv *****************
  2559 ;; Defined at:
  2560 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  dividend        4   34[COMRAM] unsigned long 
  2563 ;;  divisor         4   38[COMRAM] unsigned long 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  quotient        4   42[COMRAM] unsigned long 
  2566 ;;  counter         1   46[COMRAM] unsigned char 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  4   34[COMRAM] unsigned long 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2576 ;;      Params:         8       0       0       0       0       0       0
  2577 ;;      Locals:         5       0       0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0
  2579 ;;      Totals:        13       0       0       0       0       0       0
  2580 ;;Total ram usage:       13 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    3
  2583 ;; This function calls:
  2584 ;;		Nothing
  2585 ;; This function is called by:
  2586 ;;		_ultoa
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text18
  2591  000DE0                     __ptext18:
  2592                           	opt stack 0
  2593  000DE0                     ___lldiv:
  2594                           	opt stack 25
  2595                           
  2596                           ;incstack = 0
  2597  000DE0  0E00               	movlw	0
  2598  000DE2  6E2B               	movwf	___lldiv@quotient,c
  2599  000DE4  0E00               	movlw	0
  2600  000DE6  6E2C               	movwf	___lldiv@quotient+1,c
  2601  000DE8  0E00               	movlw	0
  2602  000DEA  6E2D               	movwf	___lldiv@quotient+2,c
  2603  000DEC  0E00               	movlw	0
  2604  000DEE  6E2E               	movwf	___lldiv@quotient+3,c
  2605  000DF0  5027               	movf	___lldiv@divisor,w,c
  2606  000DF2  1028               	iorwf	___lldiv@divisor+1,w,c
  2607  000DF4  1029               	iorwf	___lldiv@divisor+2,w,c
  2608  000DF6  102A               	iorwf	___lldiv@divisor+3,w,c
  2609  000DF8  B4D8               	btfsc	status,2,c
  2610  000DFA  D02A               	goto	l661
  2611  000DFC  0E01               	movlw	1
  2612  000DFE  6E2F               	movwf	___lldiv@counter,c
  2613  000E00  D006               	goto	l2117
  2614  000E02                     l2115:
  2615  000E02  90D8               	bcf	status,0,c
  2616  000E04  3627               	rlcf	___lldiv@divisor,f,c
  2617  000E06  3628               	rlcf	___lldiv@divisor+1,f,c
  2618  000E08  3629               	rlcf	___lldiv@divisor+2,f,c
  2619  000E0A  362A               	rlcf	___lldiv@divisor+3,f,c
  2620  000E0C  2A2F               	incf	___lldiv@counter,f,c
  2621  000E0E                     l2117:
  2622  000E0E  AE2A               	btfss	___lldiv@divisor+3,7,c
  2623  000E10  D7F8               	goto	l2115
  2624  000E12                     l2119:
  2625  000E12  90D8               	bcf	status,0,c
  2626  000E14  362B               	rlcf	___lldiv@quotient,f,c
  2627  000E16  362C               	rlcf	___lldiv@quotient+1,f,c
  2628  000E18  362D               	rlcf	___lldiv@quotient+2,f,c
  2629  000E1A  362E               	rlcf	___lldiv@quotient+3,f,c
  2630  000E1C  5027               	movf	___lldiv@divisor,w,c
  2631  000E1E  5C23               	subwf	___lldiv@dividend,w,c
  2632  000E20  5028               	movf	___lldiv@divisor+1,w,c
  2633  000E22  5824               	subwfb	___lldiv@dividend+1,w,c
  2634  000E24  5029               	movf	___lldiv@divisor+2,w,c
  2635  000E26  5825               	subwfb	___lldiv@dividend+2,w,c
  2636  000E28  502A               	movf	___lldiv@divisor+3,w,c
  2637  000E2A  5826               	subwfb	___lldiv@dividend+3,w,c
  2638  000E2C  A0D8               	btfss	status,0,c
  2639  000E2E  D009               	goto	l2127
  2640  000E30  5027               	movf	___lldiv@divisor,w,c
  2641  000E32  5E23               	subwf	___lldiv@dividend,f,c
  2642  000E34  5028               	movf	___lldiv@divisor+1,w,c
  2643  000E36  5A24               	subwfb	___lldiv@dividend+1,f,c
  2644  000E38  5029               	movf	___lldiv@divisor+2,w,c
  2645  000E3A  5A25               	subwfb	___lldiv@dividend+2,f,c
  2646  000E3C  502A               	movf	___lldiv@divisor+3,w,c
  2647  000E3E  5A26               	subwfb	___lldiv@dividend+3,f,c
  2648  000E40  802B               	bsf	___lldiv@quotient,0,c
  2649  000E42                     l2127:
  2650  000E42  90D8               	bcf	status,0,c
  2651  000E44  322A               	rrcf	___lldiv@divisor+3,f,c
  2652  000E46  3229               	rrcf	___lldiv@divisor+2,f,c
  2653  000E48  3228               	rrcf	___lldiv@divisor+1,f,c
  2654  000E4A  3227               	rrcf	___lldiv@divisor,f,c
  2655  000E4C  2E2F               	decfsz	___lldiv@counter,f,c
  2656  000E4E  D7E1               	goto	l2119
  2657  000E50                     l661:
  2658  000E50  C02B  F023         	movff	___lldiv@quotient,?___lldiv
  2659  000E54  C02C  F024         	movff	___lldiv@quotient+1,?___lldiv+1
  2660  000E58  C02D  F025         	movff	___lldiv@quotient+2,?___lldiv+2
  2661  000E5C  C02E  F026         	movff	___lldiv@quotient+3,?___lldiv+3
  2662  000E60  0012               	return		;funcret
  2663  000E62                     __end_of___lldiv:
  2664                           	opt stack 0
  2665                           tblptru	equ	0xFF8
  2666                           tblptrh	equ	0xFF7
  2667                           tblptrl	equ	0xFF6
  2668                           tablat	equ	0xFF5
  2669                           prodh	equ	0xFF4
  2670                           prodl	equ	0xFF3
  2671                           postinc0	equ	0xFEE
  2672                           wreg	equ	0xFE8
  2673                           indf2	equ	0xFDF
  2674                           fsr2h	equ	0xFDA
  2675                           fsr2l	equ	0xFD9
  2676                           status	equ	0xFD8
  2677                           
  2678 ;; *************** function ___lwtoft *****************
  2679 ;; Defined at:
  2680 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwtoft.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  c               2   42[COMRAM] unsigned int 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  3   42[COMRAM] float 
  2687 ;; Registers used:
  2688 ;;		wreg, status,2, status,0, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2694 ;;      Params:         3       0       0       0       0       0       0
  2695 ;;      Locals:         0       0       0       0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0       0       0
  2697 ;;      Totals:         3       0       0       0       0       0       0
  2698 ;;Total ram usage:        3 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    4
  2701 ;; This function calls:
  2702 ;;		___ftpack
  2703 ;; This function is called by:
  2704 ;;		_delay
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text19
  2709  00106A                     __ptext19:
  2710                           	opt stack 0
  2711  00106A                     ___lwtoft:
  2712                           	opt stack 25
  2713                           
  2714                           ;incstack = 0
  2715  00106A  C02B  F023         	movff	___lwtoft@c,___ftpack@arg
  2716  00106E  C02C  F024         	movff	___lwtoft@c+1,___ftpack@arg+1
  2717  001072  6A25               	clrf	___ftpack@arg+2,c
  2718  001074  0E8E               	movlw	142
  2719  001076  6E26               	movwf	___ftpack@exp,c
  2720  001078  0E00               	movlw	0
  2721  00107A  6E27               	movwf	___ftpack@sign,c
  2722  00107C  EC60  F005         	call	___ftpack	;wreg free
  2723  001080  C023  F02B         	movff	?___ftpack,?___lwtoft
  2724  001084  C024  F02C         	movff	?___ftpack+1,?___lwtoft+1
  2725  001088  C025  F02D         	movff	?___ftpack+2,?___lwtoft+2
  2726  00108C  0012               	return	
  2727  00108E                     __end_of___lwtoft:
  2728                           	opt stack 0
  2729                           tblptru	equ	0xFF8
  2730                           tblptrh	equ	0xFF7
  2731                           tblptrl	equ	0xFF6
  2732                           tablat	equ	0xFF5
  2733                           prodh	equ	0xFF4
  2734                           prodl	equ	0xFF3
  2735                           postinc0	equ	0xFEE
  2736                           wreg	equ	0xFE8
  2737                           indf2	equ	0xFDF
  2738                           fsr2h	equ	0xFDA
  2739                           fsr2l	equ	0xFD9
  2740                           status	equ	0xFD8
  2741                           
  2742 ;; *************** function ___ftmul *****************
  2743 ;; Defined at:
  2744 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  f1              3   45[COMRAM] float 
  2747 ;;  f2              3   48[COMRAM] float 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  f3_as_produc    3   55[COMRAM] unsigned um
  2750 ;;  sign            1   59[COMRAM] unsigned char 
  2751 ;;  cntr            1   58[COMRAM] unsigned char 
  2752 ;;  exp             1   54[COMRAM] unsigned char 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  3   45[COMRAM] float 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, status,0, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2762 ;;      Params:         6       0       0       0       0       0       0
  2763 ;;      Locals:         6       0       0       0       0       0       0
  2764 ;;      Temps:          3       0       0       0       0       0       0
  2765 ;;      Totals:        15       0       0       0       0       0       0
  2766 ;;Total ram usage:       15 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    4
  2769 ;; This function calls:
  2770 ;;		___ftpack
  2771 ;; This function is called by:
  2772 ;;		_delay
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text20
  2777  0009CC                     __ptext20:
  2778                           	opt stack 0
  2779  0009CC                     ___ftmul:
  2780                           	opt stack 25
  2781                           
  2782                           ;incstack = 0
  2783  0009CC  C030  F034         	movff	___ftmul@f1+2,??___ftmul
  2784  0009D0  6A35               	clrf	(??___ftmul+1)& (0+255),c
  2785  0009D2  6A36               	clrf	(??___ftmul+2)& (0+255),c
  2786  0009D4  342F               	rlcf	___ftmul@f1+1,w,c
  2787  0009D6  3634               	rlcf	??___ftmul& (0+255),f,c
  2788  0009D8  E301               	bnc	u1521
  2789  0009DA  8035               	bsf	(??___ftmul+1)& (0+255),0,c
  2790  0009DC                     u1521:
  2791  0009DC  5034               	movf	??___ftmul,w,c
  2792  0009DE  6E37               	movwf	___ftmul@exp,c
  2793  0009E0  5037               	movf	___ftmul@exp,w,c
  2794  0009E2  A4D8               	btfss	status,2,c
  2795  0009E4  D007               	goto	l2317
  2796  0009E6  0E00               	movlw	0
  2797  0009E8  6E2E               	movwf	?___ftmul,c
  2798  0009EA  0E00               	movlw	0
  2799  0009EC  6E2F               	movwf	?___ftmul+1,c
  2800  0009EE  0E00               	movlw	0
  2801  0009F0  6E30               	movwf	?___ftmul+2,c
  2802  0009F2  0012               	return	
  2803  0009F4                     l2317:
  2804  0009F4  C033  F034         	movff	___ftmul@f2+2,??___ftmul
  2805  0009F8  6A35               	clrf	(??___ftmul+1)& (0+255),c
  2806  0009FA  6A36               	clrf	(??___ftmul+2)& (0+255),c
  2807  0009FC  3432               	rlcf	___ftmul@f2+1,w,c
  2808  0009FE  3634               	rlcf	??___ftmul& (0+255),f,c
  2809  000A00  E301               	bnc	u1541
  2810  000A02  8035               	bsf	(??___ftmul+1)& (0+255),0,c
  2811  000A04                     u1541:
  2812  000A04  5034               	movf	??___ftmul,w,c
  2813  000A06  6E3C               	movwf	___ftmul@sign,c
  2814  000A08  503C               	movf	___ftmul@sign,w,c
  2815  000A0A  A4D8               	btfss	status,2,c
  2816  000A0C  D007               	goto	l2323
  2817  000A0E  0E00               	movlw	0
  2818  000A10  6E2E               	movwf	?___ftmul,c
  2819  000A12  0E00               	movlw	0
  2820  000A14  6E2F               	movwf	?___ftmul+1,c
  2821  000A16  0E00               	movlw	0
  2822  000A18  6E30               	movwf	?___ftmul+2,c
  2823  000A1A  0012               	return	
  2824  000A1C                     l2323:
  2825  000A1C  503C               	movf	___ftmul@sign,w,c
  2826  000A1E  0F7B               	addlw	123
  2827  000A20  2637               	addwf	___ftmul@exp,f,c
  2828  000A22  C030  F03C         	movff	___ftmul@f1+2,___ftmul@sign
  2829  000A26  5033               	movf	___ftmul@f2+2,w,c
  2830  000A28  1A3C               	xorwf	___ftmul@sign,f,c
  2831  000A2A  0E80               	movlw	128
  2832  000A2C  163C               	andwf	___ftmul@sign,f,c
  2833  000A2E  8E2F               	bsf	___ftmul@f1+1,7,c
  2834  000A30  8E32               	bsf	___ftmul@f2+1,7,c
  2835  000A32  0EFF               	movlw	255
  2836  000A34  1631               	andwf	___ftmul@f2,f,c
  2837  000A36  0EFF               	movlw	255
  2838  000A38  1632               	andwf	___ftmul@f2+1,f,c
  2839  000A3A  0E00               	movlw	0
  2840  000A3C  1633               	andwf	___ftmul@f2+2,f,c
  2841  000A3E  0E00               	movlw	0
  2842  000A40  6E38               	movwf	___ftmul@f3_as_product,c
  2843  000A42  0E00               	movlw	0
  2844  000A44  6E39               	movwf	___ftmul@f3_as_product+1,c
  2845  000A46  0E00               	movlw	0
  2846  000A48  6E3A               	movwf	___ftmul@f3_as_product+2,c
  2847  000A4A  0E07               	movlw	7
  2848  000A4C  6E3B               	movwf	___ftmul@cntr,c
  2849  000A4E                     l2337:
  2850  000A4E  A02E               	btfss	___ftmul@f1,0,c
  2851  000A50  D006               	goto	l2341
  2852  000A52  5031               	movf	___ftmul@f2,w,c
  2853  000A54  2638               	addwf	___ftmul@f3_as_product,f,c
  2854  000A56  5032               	movf	___ftmul@f2+1,w,c
  2855  000A58  2239               	addwfc	___ftmul@f3_as_product+1,f,c
  2856  000A5A  5033               	movf	___ftmul@f2+2,w,c
  2857  000A5C  223A               	addwfc	___ftmul@f3_as_product+2,f,c
  2858  000A5E                     l2341:
  2859  000A5E  90D8               	bcf	status,0,c
  2860  000A60  3230               	rrcf	___ftmul@f1+2,f,c
  2861  000A62  322F               	rrcf	___ftmul@f1+1,f,c
  2862  000A64  322E               	rrcf	___ftmul@f1,f,c
  2863  000A66  90D8               	bcf	status,0,c
  2864  000A68  3631               	rlcf	___ftmul@f2,f,c
  2865  000A6A  3632               	rlcf	___ftmul@f2+1,f,c
  2866  000A6C  3633               	rlcf	___ftmul@f2+2,f,c
  2867  000A6E  2E3B               	decfsz	___ftmul@cntr,f,c
  2868  000A70  D7EE               	goto	l2337
  2869  000A72  0E09               	movlw	9
  2870  000A74  6E3B               	movwf	___ftmul@cntr,c
  2871  000A76                     l2347:
  2872  000A76  A02E               	btfss	___ftmul@f1,0,c
  2873  000A78  D006               	goto	l2351
  2874  000A7A  5031               	movf	___ftmul@f2,w,c
  2875  000A7C  2638               	addwf	___ftmul@f3_as_product,f,c
  2876  000A7E  5032               	movf	___ftmul@f2+1,w,c
  2877  000A80  2239               	addwfc	___ftmul@f3_as_product+1,f,c
  2878  000A82  5033               	movf	___ftmul@f2+2,w,c
  2879  000A84  223A               	addwfc	___ftmul@f3_as_product+2,f,c
  2880  000A86                     l2351:
  2881  000A86  90D8               	bcf	status,0,c
  2882  000A88  3230               	rrcf	___ftmul@f1+2,f,c
  2883  000A8A  322F               	rrcf	___ftmul@f1+1,f,c
  2884  000A8C  322E               	rrcf	___ftmul@f1,f,c
  2885  000A8E  90D8               	bcf	status,0,c
  2886  000A90  323A               	rrcf	___ftmul@f3_as_product+2,f,c
  2887  000A92  3239               	rrcf	___ftmul@f3_as_product+1,f,c
  2888  000A94  3238               	rrcf	___ftmul@f3_as_product,f,c
  2889  000A96  2E3B               	decfsz	___ftmul@cntr,f,c
  2890  000A98  D7EE               	goto	l2347
  2891  000A9A  C038  F023         	movff	___ftmul@f3_as_product,___ftpack@arg
  2892  000A9E  C039  F024         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2893  000AA2  C03A  F025         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2894  000AA6  C037  F026         	movff	___ftmul@exp,___ftpack@exp
  2895  000AAA  C03C  F027         	movff	___ftmul@sign,___ftpack@sign
  2896  000AAE  EC60  F005         	call	___ftpack	;wreg free
  2897  000AB2  C023  F02E         	movff	?___ftpack,?___ftmul
  2898  000AB6  C024  F02F         	movff	?___ftpack+1,?___ftmul+1
  2899  000ABA  C025  F030         	movff	?___ftpack+2,?___ftmul+2
  2900  000ABE  0012               	return	
  2901  000AC0                     __end_of___ftmul:
  2902                           	opt stack 0
  2903                           tblptru	equ	0xFF8
  2904                           tblptrh	equ	0xFF7
  2905                           tblptrl	equ	0xFF6
  2906                           tablat	equ	0xFF5
  2907                           prodh	equ	0xFF4
  2908                           prodl	equ	0xFF3
  2909                           postinc0	equ	0xFEE
  2910                           wreg	equ	0xFE8
  2911                           indf2	equ	0xFDF
  2912                           fsr2h	equ	0xFDA
  2913                           fsr2l	equ	0xFD9
  2914                           status	equ	0xFD8
  2915                           
  2916 ;; *************** function ___ftpack *****************
  2917 ;; Defined at:
  2918 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  arg             3   34[COMRAM] unsigned um
  2921 ;;  exp             1   37[COMRAM] unsigned char 
  2922 ;;  sign            1   38[COMRAM] unsigned char 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  3   34[COMRAM] float 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2934 ;;      Params:         5       0       0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0
  2936 ;;      Temps:          3       0       0       0       0       0       0
  2937 ;;      Totals:         8       0       0       0       0       0       0
  2938 ;;Total ram usage:        8 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    3
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		___ftmul
  2945 ;;		___lwtoft
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text21
  2950  000AC0                     __ptext21:
  2951                           	opt stack 0
  2952  000AC0                     ___ftpack:
  2953                           	opt stack 25
  2954                           
  2955                           ;incstack = 0
  2956  000AC0  5026               	movf	___ftpack@exp,w,c
  2957  000AC2  B4D8               	btfsc	status,2,c
  2958  000AC4  D005               	goto	l2191
  2959  000AC6  5023               	movf	___ftpack@arg,w,c
  2960  000AC8  1024               	iorwf	___ftpack@arg+1,w,c
  2961  000ACA  1025               	iorwf	___ftpack@arg+2,w,c
  2962  000ACC  A4D8               	btfss	status,2,c
  2963  000ACE  D00C               	goto	l2197
  2964  000AD0                     l2191:
  2965  000AD0  0E00               	movlw	0
  2966  000AD2  6E23               	movwf	?___ftpack,c
  2967  000AD4  0E00               	movlw	0
  2968  000AD6  6E24               	movwf	?___ftpack+1,c
  2969  000AD8  0E00               	movlw	0
  2970  000ADA  6E25               	movwf	?___ftpack+2,c
  2971  000ADC  0012               	return	
  2972  000ADE                     l2195:
  2973  000ADE  2A26               	incf	___ftpack@exp,f,c
  2974  000AE0  90D8               	bcf	status,0,c
  2975  000AE2  3225               	rrcf	___ftpack@arg+2,f,c
  2976  000AE4  3224               	rrcf	___ftpack@arg+1,f,c
  2977  000AE6  3223               	rrcf	___ftpack@arg,f,c
  2978  000AE8                     l2197:
  2979  000AE8  0E00               	movlw	0
  2980  000AEA  1423               	andwf	___ftpack@arg,w,c
  2981  000AEC  6E28               	movwf	??___ftpack& (0+255),c
  2982  000AEE  0E00               	movlw	0
  2983  000AF0  1424               	andwf	___ftpack@arg+1,w,c
  2984  000AF2  6E29               	movwf	(??___ftpack+1)& (0+255),c
  2985  000AF4  0EFE               	movlw	254
  2986  000AF6  1425               	andwf	___ftpack@arg+2,w,c
  2987  000AF8  6E2A               	movwf	(??___ftpack+2)& (0+255),c
  2988  000AFA  5028               	movf	??___ftpack,w,c
  2989  000AFC  1029               	iorwf	??___ftpack+1,w,c
  2990  000AFE  102A               	iorwf	??___ftpack+2,w,c
  2991  000B00  B4D8               	btfsc	status,2,c
  2992  000B02  D00C               	goto	l2203
  2993  000B04  D7EC               	goto	l2195
  2994  000B06                     l2199:
  2995  000B06  2A26               	incf	___ftpack@exp,f,c
  2996  000B08  0E01               	movlw	1
  2997  000B0A  2623               	addwf	___ftpack@arg,f,c
  2998  000B0C  0E00               	movlw	0
  2999  000B0E  2224               	addwfc	___ftpack@arg+1,f,c
  3000  000B10  0E00               	movlw	0
  3001  000B12  2225               	addwfc	___ftpack@arg+2,f,c
  3002  000B14  90D8               	bcf	status,0,c
  3003  000B16  3225               	rrcf	___ftpack@arg+2,f,c
  3004  000B18  3224               	rrcf	___ftpack@arg+1,f,c
  3005  000B1A  3223               	rrcf	___ftpack@arg,f,c
  3006  000B1C                     l2203:
  3007  000B1C  0E00               	movlw	0
  3008  000B1E  1423               	andwf	___ftpack@arg,w,c
  3009  000B20  6E28               	movwf	??___ftpack& (0+255),c
  3010  000B22  0E00               	movlw	0
  3011  000B24  1424               	andwf	___ftpack@arg+1,w,c
  3012  000B26  6E29               	movwf	(??___ftpack+1)& (0+255),c
  3013  000B28  0EFF               	movlw	255
  3014  000B2A  1425               	andwf	___ftpack@arg+2,w,c
  3015  000B2C  6E2A               	movwf	(??___ftpack+2)& (0+255),c
  3016  000B2E  5028               	movf	??___ftpack,w,c
  3017  000B30  1029               	iorwf	??___ftpack+1,w,c
  3018  000B32  102A               	iorwf	??___ftpack+2,w,c
  3019  000B34  B4D8               	btfsc	status,2,c
  3020  000B36  D006               	goto	l2207
  3021  000B38  D7E6               	goto	l2199
  3022  000B3A                     l2205:
  3023  000B3A  0626               	decf	___ftpack@exp,f,c
  3024  000B3C  90D8               	bcf	status,0,c
  3025  000B3E  3623               	rlcf	___ftpack@arg,f,c
  3026  000B40  3624               	rlcf	___ftpack@arg+1,f,c
  3027  000B42  3625               	rlcf	___ftpack@arg+2,f,c
  3028  000B44                     l2207:
  3029  000B44  BE24               	btfsc	___ftpack@arg+1,7,c
  3030  000B46  D003               	goto	l536
  3031  000B48  0E02               	movlw	2
  3032  000B4A  6026               	cpfslt	___ftpack@exp,c
  3033  000B4C  D7F6               	goto	l2205
  3034  000B4E                     l536:
  3035  000B4E  A026               	btfss	___ftpack@exp,0,c
  3036  000B50  9E24               	bcf	___ftpack@arg+1,7,c
  3037  000B52  90D8               	bcf	status,0,c
  3038  000B54  3226               	rrcf	___ftpack@exp,f,c
  3039  000B56  5026               	movf	___ftpack@exp,w,c
  3040  000B58  1225               	iorwf	___ftpack@arg+2,f,c
  3041  000B5A  5027               	movf	___ftpack@sign,w,c
  3042  000B5C  A4D8               	btfss	status,2,c
  3043  000B5E  8E25               	bsf	___ftpack@arg+2,7,c
  3044  000B60  C023  F023         	movff	___ftpack@arg,?___ftpack
  3045  000B64  C024  F024         	movff	___ftpack@arg+1,?___ftpack+1
  3046  000B68  C025  F025         	movff	___ftpack@arg+2,?___ftpack+2
  3047  000B6C  0012               	return	
  3048  000B6E                     __end_of___ftpack:
  3049                           	opt stack 0
  3050                           tblptru	equ	0xFF8
  3051                           tblptrh	equ	0xFF7
  3052                           tblptrl	equ	0xFF6
  3053                           tablat	equ	0xFF5
  3054                           prodh	equ	0xFF4
  3055                           prodl	equ	0xFF3
  3056                           postinc0	equ	0xFEE
  3057                           wreg	equ	0xFE8
  3058                           indf2	equ	0xFDF
  3059                           fsr2h	equ	0xFDA
  3060                           fsr2l	equ	0xFD9
  3061                           status	equ	0xFD8
  3062                           
  3063 ;; *************** function ___ftge *****************
  3064 ;; Defined at:
  3065 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  ff1             3   60[COMRAM] float 
  3068 ;;  ff2             3   63[COMRAM] float 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;		None               void
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3080 ;;      Params:         6       0       0       0       0       0       0
  3081 ;;      Locals:         0       0       0       0       0       0       0
  3082 ;;      Temps:          3       0       0       0       0       0       0
  3083 ;;      Totals:         9       0       0       0       0       0       0
  3084 ;;Total ram usage:        9 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    3
  3087 ;; This function calls:
  3088 ;;		Nothing
  3089 ;; This function is called by:
  3090 ;;		_delay
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text22
  3095  000D50                     __ptext22:
  3096                           	opt stack 0
  3097  000D50                     ___ftge:
  3098                           	opt stack 26
  3099                           
  3100                           ;incstack = 0
  3101  000D50  AE3F               	btfss	___ftge@ff1+2,7,c
  3102  000D52  D016               	goto	l2363
  3103  000D54  C03D  F043         	movff	___ftge@ff1,??___ftge
  3104  000D58  C03E  F044         	movff	___ftge@ff1+1,??___ftge+1
  3105  000D5C  C03F  F045         	movff	___ftge@ff1+2,??___ftge+2
  3106  000D60  1E43               	comf	??___ftge,f,c
  3107  000D62  1E44               	comf	??___ftge+1,f,c
  3108  000D64  1E45               	comf	??___ftge+2,f,c
  3109  000D66  2A43               	incf	??___ftge,f,c
  3110  000D68  0E00               	movlw	0
  3111  000D6A  2244               	addwfc	??___ftge+1,f,c
  3112  000D6C  2245               	addwfc	??___ftge+2,f,c
  3113  000D6E  0E00               	movlw	0
  3114  000D70  2443               	addwf	??___ftge,w,c
  3115  000D72  6E3D               	movwf	___ftge@ff1,c
  3116  000D74  0E00               	movlw	0
  3117  000D76  2044               	addwfc	??___ftge+1,w,c
  3118  000D78  6E3E               	movwf	___ftge@ff1+1,c
  3119  000D7A  0E80               	movlw	128
  3120  000D7C  2045               	addwfc	??___ftge+2,w,c
  3121  000D7E  6E3F               	movwf	___ftge@ff1+2,c
  3122  000D80                     l2363:
  3123  000D80  AE42               	btfss	___ftge@ff2+2,7,c
  3124  000D82  D016               	goto	l2367
  3125  000D84  C040  F043         	movff	___ftge@ff2,??___ftge
  3126  000D88  C041  F044         	movff	___ftge@ff2+1,??___ftge+1
  3127  000D8C  C042  F045         	movff	___ftge@ff2+2,??___ftge+2
  3128  000D90  1E43               	comf	??___ftge,f,c
  3129  000D92  1E44               	comf	??___ftge+1,f,c
  3130  000D94  1E45               	comf	??___ftge+2,f,c
  3131  000D96  2A43               	incf	??___ftge,f,c
  3132  000D98  0E00               	movlw	0
  3133  000D9A  2244               	addwfc	??___ftge+1,f,c
  3134  000D9C  2245               	addwfc	??___ftge+2,f,c
  3135  000D9E  0E00               	movlw	0
  3136  000DA0  2443               	addwf	??___ftge,w,c
  3137  000DA2  6E40               	movwf	___ftge@ff2,c
  3138  000DA4  0E00               	movlw	0
  3139  000DA6  2044               	addwfc	??___ftge+1,w,c
  3140  000DA8  6E41               	movwf	___ftge@ff2+1,c
  3141  000DAA  0E80               	movlw	128
  3142  000DAC  2045               	addwfc	??___ftge+2,w,c
  3143  000DAE  6E42               	movwf	___ftge@ff2+2,c
  3144  000DB0                     l2367:
  3145  000DB0  0E00               	movlw	0
  3146  000DB2  1A3D               	xorwf	___ftge@ff1,f,c
  3147  000DB4  0E00               	movlw	0
  3148  000DB6  1A3E               	xorwf	___ftge@ff1+1,f,c
  3149  000DB8  0E80               	movlw	128
  3150  000DBA  1A3F               	xorwf	___ftge@ff1+2,f,c
  3151  000DBC  0E00               	movlw	0
  3152  000DBE  1A40               	xorwf	___ftge@ff2,f,c
  3153  000DC0  0E00               	movlw	0
  3154  000DC2  1A41               	xorwf	___ftge@ff2+1,f,c
  3155  000DC4  0E80               	movlw	128
  3156  000DC6  1A42               	xorwf	___ftge@ff2+2,f,c
  3157  000DC8  5040               	movf	___ftge@ff2,w,c
  3158  000DCA  5C3D               	subwf	___ftge@ff1,w,c
  3159  000DCC  5041               	movf	___ftge@ff2+1,w,c
  3160  000DCE  583E               	subwfb	___ftge@ff1+1,w,c
  3161  000DD0  5042               	movf	___ftge@ff2+2,w,c
  3162  000DD2  583F               	subwfb	___ftge@ff1+2,w,c
  3163  000DD4  B0D8               	btfsc	status,0,c
  3164  000DD6  D002               	goto	l2373
  3165  000DD8  90D8               	bcf	status,0,c
  3166  000DDA  0012               	return	
  3167  000DDC                     l2373:
  3168  000DDC  80D8               	bsf	status,0,c
  3169  000DDE  0012               	return	
  3170  000DE0                     __end_of___ftge:
  3171                           	opt stack 0
  3172                           tblptru	equ	0xFF8
  3173                           tblptrh	equ	0xFF7
  3174                           tblptrl	equ	0xFF6
  3175                           tablat	equ	0xFF5
  3176                           prodh	equ	0xFF4
  3177                           prodl	equ	0xFF3
  3178                           postinc0	equ	0xFEE
  3179                           wreg	equ	0xFE8
  3180                           indf2	equ	0xFDF
  3181                           fsr2h	equ	0xFDA
  3182                           fsr2l	equ	0xFD9
  3183                           status	equ	0xFD8
  3184                           
  3185 ;; *************** function _configureOscillator *****************
  3186 ;; Defined at:
  3187 ;;		line 24 in file "system.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;		None               void
  3194 ;; Registers used:
  3195 ;;		wreg, status,2
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3201 ;;      Params:         0       0       0       0       0       0       0
  3202 ;;      Locals:         0       0       0       0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0       0       0
  3204 ;;      Totals:         0       0       0       0       0       0       0
  3205 ;;Total ram usage:        0 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    3
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		_main
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text23
  3216  00111C                     __ptext23:
  3217                           	opt stack 0
  3218  00111C                     _configureOscillator:
  3219                           	opt stack 27
  3220                           
  3221                           ;system.c: 26: OSCCONbits.IRCF = 0b110;
  3222                           
  3223                           ;incstack = 0
  3224  00111C  50D3               	movf	4051,w,c	;volatile
  3225  00111E  0B8F               	andlw	-113
  3226  001120  0960               	iorlw	96
  3227  001122  6ED3               	movwf	4051,c	;volatile
  3228                           
  3229                           ;system.c: 27: OSCCONbits.SCS = 0;
  3230  001124  0EFC               	movlw	-4
  3231  001126  16D3               	andwf	4051,f,c	;volatile
  3232                           
  3233                           ;system.c: 28: OSCTUNEbits.PLLEN = 0;
  3234  001128  9C9B               	bcf	3995,6,c	;volatile
  3235                           
  3236                           ;system.c: 29: OSCTUNEbits.TUN = 0b0000;
  3237  00112A  909B               	bcf	3995,0,c	;volatile
  3238  00112C  929B               	bcf	3995,1,c	;volatile
  3239  00112E  949B               	bcf	3995,2,c	;volatile
  3240  001130  969B               	bcf	3995,3,c	;volatile
  3241  001132  989B               	bcf	3995,4,c	;volatile
  3242  001134  0012               	return		;funcret
  3243  001136                     __end_of_configureOscillator:
  3244                           	opt stack 0
  3245                           tblptru	equ	0xFF8
  3246                           tblptrh	equ	0xFF7
  3247                           tblptrl	equ	0xFF6
  3248                           tablat	equ	0xFF5
  3249                           prodh	equ	0xFF4
  3250                           prodl	equ	0xFF3
  3251                           postinc0	equ	0xFEE
  3252                           wreg	equ	0xFE8
  3253                           indf2	equ	0xFDF
  3254                           fsr2h	equ	0xFDA
  3255                           fsr2l	equ	0xFD9
  3256                           status	equ	0xFD8
  3257                           
  3258 ;; *************** function _configureInterrupts *****************
  3259 ;; Defined at:
  3260 ;;		line 33 in file "system.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;		None               void
  3267 ;; Registers used:
  3268 ;;		None
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3274 ;;      Params:         0       0       0       0       0       0       0
  3275 ;;      Locals:         0       0       0       0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0
  3277 ;;      Totals:         0       0       0       0       0       0       0
  3278 ;;Total ram usage:        0 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:    3
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_main
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text24
  3289  001136                     __ptext24:
  3290                           	opt stack 0
  3291  001136                     _configureInterrupts:
  3292                           	opt stack 27
  3293                           
  3294                           ;system.c: 34: RCONbits.IPEN = 1;
  3295                           
  3296                           ;incstack = 0
  3297  001136  8ED0               	bsf	4048,7,c	;volatile
  3298                           
  3299                           ;system.c: 37: INTCONbits.GIE = 1;
  3300  001138  8EF2               	bsf	intcon,7,c	;volatile
  3301                           
  3302                           ;system.c: 38: INTCONbits.PEIE = 1;
  3303  00113A  8CF2               	bsf	intcon,6,c	;volatile
  3304                           
  3305                           ;system.c: 39: PIE1bits.SSPIE = 1;
  3306  00113C  869D               	bsf	3997,3,c	;volatile
  3307                           
  3308                           ;system.c: 40: PIE1bits.RCIE = 1;
  3309  00113E  8A9D               	bsf	3997,5,c	;volatile
  3310                           
  3311                           ;system.c: 41: PIE1bits.ADIE = 1;
  3312  001140  8C9D               	bsf	3997,6,c	;volatile
  3313                           
  3314                           ;system.c: 42: PIE2bits.TMR3IE = 1;
  3315  001142  82A0               	bsf	4000,1,c	;volatile
  3316                           
  3317                           ;system.c: 43: PIE2bits.BCLIE = 1;
  3318  001144  86A0               	bsf	4000,3,c	;volatile
  3319                           
  3320                           ;system.c: 46: IPR1bits.SSPIP = 0;
  3321  001146  969F               	bcf	3999,3,c	;volatile
  3322                           
  3323                           ;system.c: 47: IPR1bits.RCIP = 0;
  3324  001148  9A9F               	bcf	3999,5,c	;volatile
  3325                           
  3326                           ;system.c: 48: IPR1bits.ADIP = 0;
  3327  00114A  9C9F               	bcf	3999,6,c	;volatile
  3328                           
  3329                           ;system.c: 49: IPR2bits.TMR3IP = 1;
  3330  00114C  82A2               	bsf	4002,1,c	;volatile
  3331  00114E  0012               	return		;funcret
  3332  001150                     __end_of_configureInterrupts:
  3333                           	opt stack 0
  3334                           tblptru	equ	0xFF8
  3335                           tblptrh	equ	0xFF7
  3336                           tblptrl	equ	0xFF6
  3337                           tablat	equ	0xFF5
  3338                           prodh	equ	0xFF4
  3339                           prodl	equ	0xFF3
  3340                           intcon	equ	0xFF2
  3341                           postinc0	equ	0xFEE
  3342                           wreg	equ	0xFE8
  3343                           indf2	equ	0xFDF
  3344                           fsr2h	equ	0xFDA
  3345                           fsr2l	equ	0xFD9
  3346                           status	equ	0xFD8
  3347                           
  3348 ;; *************** function _adcRead *****************
  3349 ;; Defined at:
  3350 ;;		line 38 in file "adclib.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  channel         1    wreg     unsigned char 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  channel         1   37[COMRAM] unsigned char 
  3355 ;;  val             2   38[COMRAM] unsigned char [2]
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  2   34[COMRAM] PTR unsigned char 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3365 ;;      Params:         2       0       0       0       0       0       0
  3366 ;;      Locals:         3       0       0       0       0       0       0
  3367 ;;      Temps:          1       0       0       0       0       0       0
  3368 ;;      Totals:         6       0       0       0       0       0       0
  3369 ;;Total ram usage:        6 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    3
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text25
  3380  00103A                     __ptext25:
  3381                           	opt stack 0
  3382  00103A                     _adcRead:
  3383                           	opt stack 27
  3384                           
  3385                           ;incstack = 0
  3386                           ;adcRead@channel stored from wreg
  3387  00103A  6E26               	movwf	adcRead@channel,c
  3388                           
  3389                           ;adclib.c: 39: unsigned char val[2];
  3390                           ;adclib.c: 40: ADCON0bits.CHS = channel;
  3391  00103C  C026  F025         	movff	adcRead@channel,??_adcRead
  3392  001040  4625               	rlncf	??_adcRead,f,c
  3393  001042  4625               	rlncf	??_adcRead,f,c
  3394  001044  50C2               	movf	4034,w,c	;volatile
  3395  001046  1825               	xorwf	??_adcRead,w,c
  3396  001048  0BC3               	andlw	-61
  3397  00104A  1825               	xorwf	??_adcRead,w,c
  3398  00104C  6EC2               	movwf	4034,c	;volatile
  3399                           
  3400                           ;adclib.c: 41: ADCON0bits.GO = 1;
  3401  00104E  82C2               	bsf	4034,1,c	;volatile
  3402  001050                     l22:
  3403  001050  B2C2               	btfsc	4034,1,c	;volatile
  3404  001052  D7FE               	goto	l22
  3405                           
  3406                           ;adclib.c: 43: adcflag = 0;
  3407  001054  0E00               	movlw	0
  3408  001056  6E54               	movwf	_adcflag,c	;volatile
  3409                           
  3410                           ;adclib.c: 44: val[0] = ADRESL;
  3411  001058  CFC3 F027          	movff	4035,adcRead@val	;volatile
  3412                           
  3413                           ;adclib.c: 45: val[1] = ADRESH;
  3414  00105C  CFC4 F028          	movff	4036,adcRead@val+1	;volatile
  3415                           
  3416                           ;adclib.c: 48: return val;
  3417  001060  0E27               	movlw	low adcRead@val
  3418  001062  6E23               	movwf	?_adcRead,c
  3419  001064  0E00               	movlw	high adcRead@val
  3420  001066  6E24               	movwf	?_adcRead+1,c
  3421  001068  0012               	return	
  3422  00106A                     __end_of_adcRead:
  3423                           	opt stack 0
  3424                           tblptru	equ	0xFF8
  3425                           tblptrh	equ	0xFF7
  3426                           tblptrl	equ	0xFF6
  3427                           tablat	equ	0xFF5
  3428                           prodh	equ	0xFF4
  3429                           prodl	equ	0xFF3
  3430                           intcon	equ	0xFF2
  3431                           postinc0	equ	0xFEE
  3432                           wreg	equ	0xFE8
  3433                           indf2	equ	0xFDF
  3434                           fsr2h	equ	0xFDA
  3435                           fsr2l	equ	0xFD9
  3436                           status	equ	0xFD8
  3437                           
  3438 ;; *************** function _lowISR *****************
  3439 ;; Defined at:
  3440 ;;		line 31 in file "interrupts.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;		None               void
  3447 ;; Registers used:
  3448 ;;		wreg, status,2, status,0, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3454 ;;      Params:         0       0       0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0
  3456 ;;      Temps:         19       0       0       0       0       0       0
  3457 ;;      Totals:        19       0       0       0       0       0       0
  3458 ;;Total ram usage:       19 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:    2
  3461 ;; This function calls:
  3462 ;;		i1_writeChar
  3463 ;; This function is called by:
  3464 ;;		Interrupt level 1
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	intcodelo
  3469  000018                     __pintcodelo:
  3470                           	opt stack 0
  3471  000018                     _lowISR:
  3472                           	opt stack 23
  3473                           
  3474                           ;incstack = 0
  3475  000018  805D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  3476  00001A  CFD8 F004          	movff	status,??_lowISR+2
  3477  00001E  CFE8 F005          	movff	wreg,??_lowISR+3
  3478  000022  CFE0 F006          	movff	bsr,??_lowISR+4
  3479  000026  CFFA F007          	movff	pclath,??_lowISR+5
  3480  00002A  CFFB F008          	movff	pclatu,??_lowISR+6
  3481  00002E  CFE9 F009          	movff	fsr0l,??_lowISR+7
  3482  000032  CFEA F00A          	movff	fsr0h,??_lowISR+8
  3483  000036  CFE1 F00B          	movff	fsr1l,??_lowISR+9
  3484  00003A  CFE2 F00C          	movff	fsr1h,??_lowISR+10
  3485  00003E  CFD9 F00D          	movff	fsr2l,??_lowISR+11
  3486  000042  CFDA F00E          	movff	fsr2h,??_lowISR+12
  3487  000046  CFF3 F00F          	movff	prodl,??_lowISR+13
  3488  00004A  CFF4 F010          	movff	prodh,??_lowISR+14
  3489  00004E  CFF6 F011          	movff	tblptrl,??_lowISR+15
  3490  000052  CFF7 F012          	movff	tblptrh,??_lowISR+16
  3491  000056  CFF8 F013          	movff	tblptru,??_lowISR+17
  3492  00005A  CFF5 F014          	movff	tablat,??_lowISR+18
  3493                           
  3494                           ;interrupts.c: 32: if(PIR1bits.ADIF){
  3495  00005E  AC9E               	btfss	3998,6,c	;volatile
  3496  000060  D003               	goto	i1l1997
  3497                           
  3498                           ;interrupts.c: 33: adcflag = 1;
  3499  000062  0E01               	movlw	1
  3500  000064  6E54               	movwf	_adcflag,c	;volatile
  3501                           
  3502                           ;interrupts.c: 34: PIR1bits.ADIF = 0;
  3503  000066  9C9E               	bcf	3998,6,c	;volatile
  3504  000068                     i1l1997:
  3505                           
  3506                           ;interrupts.c: 35: }
  3507                           ;interrupts.c: 37: if(PIR1bits.SSPIF){
  3508  000068  A69E               	btfss	3998,3,c	;volatile
  3509  00006A  D007               	goto	i1l159
  3510                           
  3511                           ;interrupts.c: 38: if(!SSPCON2bits.ACKSTAT){
  3512  00006C  BCC5               	btfsc	4037,6,c	;volatile
  3513  00006E  D002               	goto	i1l2003
  3514                           
  3515                           ;interrupts.c: 40: ackflag = 1;
  3516  000070  0E01               	movlw	1
  3517  000072  6E53               	movwf	_ackflag,c	;volatile
  3518  000074                     i1l2003:
  3519                           
  3520                           ;interrupts.c: 41: }
  3521                           ;interrupts.c: 42: if(SSPSTATbits.S){
  3522  000074  50C7               	movf	4039,w,c	;volatile
  3523                           
  3524                           ;interrupts.c: 44: }
  3525                           ;interrupts.c: 45: if(SSPSTATbits.BF){
  3526  000076  50C7               	movf	4039,w,c	;volatile
  3527                           
  3528                           ;interrupts.c: 50: }
  3529                           ;interrupts.c: 51: PIR1bits.SSPIF = 0;
  3530                           
  3531                           ;interrupts.c: 48: else{
  3532                           
  3533                           ;interrupts.c: 47: }
  3534  000078  969E               	bcf	3998,3,c	;volatile
  3535  00007A                     i1l159:
  3536                           
  3537                           ;interrupts.c: 52: }
  3538                           ;interrupts.c: 53: if(PIR2bits.BCLIF){
  3539  00007A  A6A1               	btfss	4001,3,c	;volatile
  3540  00007C  D005               	goto	i1l2011
  3541                           
  3542                           ;interrupts.c: 54: writeChar('b');
  3543  00007E  0E62               	movlw	98
  3544  000080  ECCC  F008         	call	i1_writeChar
  3545                           
  3546                           ;interrupts.c: 55: PIR2bits.BCLIF = 0;
  3547  000084  96A1               	bcf	4001,3,c	;volatile
  3548                           
  3549                           ;interrupts.c: 56: }
  3550  000086  D035               	goto	i1l170
  3551  000088                     i1l2011:
  3552                           
  3553                           ;interrupts.c: 58: else if(PIR1bits.RCIF & !(RCSTAbits.FERR|RCSTAbits.OERR)){
  3554  000088  AA9E               	btfss	3998,5,c	;volatile
  3555  00008A  D003               	goto	i1u111_20
  3556  00008C  6A02               	clrf	??_lowISR& (0+255),c
  3557  00008E  2A02               	incf	??_lowISR& (0+255),f,c
  3558  000090  D001               	goto	i1u111_28
  3559  000092                     i1u111_20:
  3560  000092  6A02               	clrf	??_lowISR& (0+255),c
  3561  000094                     i1u111_28:
  3562  000094  0E00               	movlw	0
  3563  000096  B4AB               	btfsc	4011,2,c	;volatile
  3564  000098  0E01               	movlw	1
  3565  00009A  B2AB               	btfsc	4011,1,c	;volatile
  3566  00009C  0E01               	movlw	1
  3567  00009E  A0E8               	btfss	wreg,0,c
  3568  0000A0  D003               	goto	i1u112_20
  3569  0000A2  6A03               	clrf	(??_lowISR+1)& (0+255),c
  3570  0000A4  2A03               	incf	(??_lowISR+1)& (0+255),f,c
  3571  0000A6  D001               	goto	i1u112_28
  3572  0000A8                     i1u112_20:
  3573  0000A8  6A03               	clrf	(??_lowISR+1)& (0+255),c
  3574  0000AA                     i1u112_28:
  3575  0000AA  5003               	movf	??_lowISR+1,w,c
  3576  0000AC  A4D8               	btfss	status,2,c
  3577  0000AE  D002               	goto	i1u113_20
  3578  0000B0  0E01               	movlw	1
  3579  0000B2  D001               	goto	i1u114_20
  3580  0000B4                     i1u113_20:
  3581  0000B4  0E00               	movlw	0
  3582  0000B6                     i1u114_20:
  3583  0000B6  1402               	andwf	??_lowISR,w,c
  3584  0000B8  0900               	iorlw	0
  3585  0000BA  B4D8               	btfsc	status,2,c
  3586  0000BC  D005               	goto	i1l2017
  3587                           
  3588                           ;interrupts.c: 59: data = RCREG;
  3589  0000BE  CFAE F057          	movff	4014,_data	;volatile
  3590                           
  3591                           ;interrupts.c: 60: en_read = 1;
  3592  0000C2  0E01               	movlw	1
  3593  0000C4  6E59               	movwf	_en_read,c	;volatile
  3594                           
  3595                           ;interrupts.c: 61: }
  3596  0000C6  D015               	goto	i1l170
  3597  0000C8                     i1l2017:
  3598                           
  3599                           ;interrupts.c: 62: else if(RCSTAbits.FERR|RCSTAbits.OERR){
  3600  0000C8  0E00               	movlw	0
  3601  0000CA  B4AB               	btfsc	4011,2,c	;volatile
  3602  0000CC  0E01               	movlw	1
  3603  0000CE  B2AB               	btfsc	4011,1,c	;volatile
  3604  0000D0  0E01               	movlw	1
  3605  0000D2  A0E8               	btfss	wreg,0,c
  3606  0000D4  D003               	goto	i1u116_20
  3607  0000D6  6A02               	clrf	??_lowISR& (0+255),c
  3608  0000D8  2A02               	incf	??_lowISR& (0+255),f,c
  3609  0000DA  D001               	goto	i1u116_28
  3610  0000DC                     i1u116_20:
  3611  0000DC  6A02               	clrf	??_lowISR& (0+255),c
  3612  0000DE                     i1u116_28:
  3613  0000DE  5002               	movf	??_lowISR,w,c
  3614  0000E0  B4D8               	btfsc	status,2,c
  3615  0000E2  D005               	goto	i1l168
  3616                           
  3617                           ;interrupts.c: 63: data = RCREG;
  3618  0000E4  CFAE F057          	movff	4014,_data	;volatile
  3619                           
  3620                           ;interrupts.c: 64: RCSTAbits.CREN = 0;
  3621  0000E8  98AB               	bcf	4011,4,c	;volatile
  3622                           
  3623                           ;interrupts.c: 65: RCSTAbits.CREN = 1;
  3624  0000EA  88AB               	bsf	4011,4,c	;volatile
  3625                           
  3626                           ;interrupts.c: 66: }
  3627  0000EC  D002               	goto	i1l170
  3628  0000EE                     i1l168:
  3629                           
  3630                           ;interrupts.c: 67: else{
  3631                           ;interrupts.c: 68: garb = RCREG;
  3632  0000EE  CFAE F05A          	movff	4014,_garb	;volatile
  3633  0000F2                     i1l170:
  3634  0000F2  C014  FFF5         	movff	??_lowISR+18,tablat
  3635  0000F6  C013  FFF8         	movff	??_lowISR+17,tblptru
  3636  0000FA  C012  FFF7         	movff	??_lowISR+16,tblptrh
  3637  0000FE  C011  FFF6         	movff	??_lowISR+15,tblptrl
  3638  000102  C010  FFF4         	movff	??_lowISR+14,prodh
  3639  000106  C00F  FFF3         	movff	??_lowISR+13,prodl
  3640  00010A  C00E  FFDA         	movff	??_lowISR+12,fsr2h
  3641  00010E  C00D  FFD9         	movff	??_lowISR+11,fsr2l
  3642  000112  C00C  FFE2         	movff	??_lowISR+10,fsr1h
  3643  000116  C00B  FFE1         	movff	??_lowISR+9,fsr1l
  3644  00011A  C00A  FFEA         	movff	??_lowISR+8,fsr0h
  3645  00011E  C009  FFE9         	movff	??_lowISR+7,fsr0l
  3646  000122  C008  FFFB         	movff	??_lowISR+6,pclatu
  3647  000126  C007  FFFA         	movff	??_lowISR+5,pclath
  3648  00012A  C006  FFE0         	movff	??_lowISR+4,bsr
  3649  00012E  C005  FFE8         	movff	??_lowISR+3,wreg
  3650  000132  C004  FFD8         	movff	??_lowISR+2,status
  3651  000136  905D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  3652  000138  0010               	retfie	
  3653  00013A                     __end_of_lowISR:
  3654                           	opt stack 0
  3655                           pclatu	equ	0xFFB
  3656                           pclath	equ	0xFFA
  3657                           tblptru	equ	0xFF8
  3658                           tblptrh	equ	0xFF7
  3659                           tblptrl	equ	0xFF6
  3660                           tablat	equ	0xFF5
  3661                           prodh	equ	0xFF4
  3662                           prodl	equ	0xFF3
  3663                           intcon	equ	0xFF2
  3664                           postinc0	equ	0xFEE
  3665                           fsr0h	equ	0xFEA
  3666                           fsr0l	equ	0xFE9
  3667                           wreg	equ	0xFE8
  3668                           fsr1h	equ	0xFE2
  3669                           fsr1l	equ	0xFE1
  3670                           bsr	equ	0xFE0
  3671                           indf2	equ	0xFDF
  3672                           fsr2h	equ	0xFDA
  3673                           fsr2l	equ	0xFD9
  3674                           status	equ	0xFD8
  3675                           
  3676 ;; *************** function i1_writeChar *****************
  3677 ;; Defined at:
  3678 ;;		line 41 in file "uart.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  c               1    wreg     unsigned char 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  c               1    0[COMRAM] unsigned char 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;		None               void
  3685 ;; Registers used:
  3686 ;;		wreg
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3692 ;;      Params:         0       0       0       0       0       0       0
  3693 ;;      Locals:         1       0       0       0       0       0       0
  3694 ;;      Temps:          0       0       0       0       0       0       0
  3695 ;;      Totals:         1       0       0       0       0       0       0
  3696 ;;Total ram usage:        1 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    1
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_lowISR
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           	psect	text27
  3707  001198                     __ptext27:
  3708                           	opt stack 0
  3709  001198                     i1_writeChar:
  3710                           	opt stack 23
  3711                           
  3712                           ;incstack = 0
  3713                           ;i1writeChar@c stored from wreg
  3714  001198  6E01               	movwf	i1writeChar@c,c
  3715  00119A                     i1l283:
  3716  00119A  A2AC               	btfss	4012,1,c	;volatile
  3717  00119C  D7FE               	goto	i1l283
  3718                           
  3719                           ;uart.c: 43: TXREG = c;
  3720  00119E  C001  FFAD         	movff	i1writeChar@c,4013	;volatile
  3721  0011A2  0012               	return		;funcret
  3722  0011A4                     __end_ofi1_writeChar:
  3723                           	opt stack 0
  3724                           pclatu	equ	0xFFB
  3725                           pclath	equ	0xFFA
  3726                           tblptru	equ	0xFF8
  3727                           tblptrh	equ	0xFF7
  3728                           tblptrl	equ	0xFF6
  3729                           tablat	equ	0xFF5
  3730                           prodh	equ	0xFF4
  3731                           prodl	equ	0xFF3
  3732                           intcon	equ	0xFF2
  3733                           postinc0	equ	0xFEE
  3734                           fsr0h	equ	0xFEA
  3735                           fsr0l	equ	0xFE9
  3736                           wreg	equ	0xFE8
  3737                           fsr1h	equ	0xFE2
  3738                           fsr1l	equ	0xFE1
  3739                           bsr	equ	0xFE0
  3740                           indf2	equ	0xFDF
  3741                           fsr2h	equ	0xFDA
  3742                           fsr2l	equ	0xFD9
  3743                           status	equ	0xFD8
  3744                           
  3745 ;; *************** function _i2cISR *****************
  3746 ;; Defined at:
  3747 ;;		line 24 in file "interrupts.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;		None               void
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3761 ;;      Params:         0       0       0       0       0       0       0
  3762 ;;      Locals:         0       0       0       0       0       0       0
  3763 ;;      Temps:         14       0       0       0       0       0       0
  3764 ;;      Totals:        14       0       0       0       0       0       0
  3765 ;;Total ram usage:       14 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; This function calls:
  3768 ;;		Nothing
  3769 ;; This function is called by:
  3770 ;;		Interrupt level 2
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           	psect	intcode
  3775  000008                     __pintcode:
  3776                           	opt stack 0
  3777  000008                     _i2cISR:
  3778                           	opt stack 23
  3779                           
  3780                           ;incstack = 0
  3781  000008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3782  00000A  CFFA F015          	movff	pclath,??_i2cISR
  3783  00000E  CFFB F016          	movff	pclatu,??_i2cISR+1
  3784  000012  ED31  F007         	call	int_func,f	;refresh shadow registers
  3785                           pclatu	equ	0xFFB
  3786                           pclath	equ	0xFFA
  3787                           tblptru	equ	0xFF8
  3788                           tblptrh	equ	0xFF7
  3789                           tblptrl	equ	0xFF6
  3790                           tablat	equ	0xFF5
  3791                           prodh	equ	0xFF4
  3792                           prodl	equ	0xFF3
  3793                           intcon	equ	0xFF2
  3794                           postinc0	equ	0xFEE
  3795                           fsr0h	equ	0xFEA
  3796                           fsr0l	equ	0xFE9
  3797                           wreg	equ	0xFE8
  3798                           fsr1h	equ	0xFE2
  3799                           fsr1l	equ	0xFE1
  3800                           bsr	equ	0xFE0
  3801                           indf2	equ	0xFDF
  3802                           fsr2h	equ	0xFDA
  3803                           fsr2l	equ	0xFD9
  3804                           status	equ	0xFD8
  3805                           
  3806                           	psect	intcode_body
  3807  000E62                     __pintcode_body:
  3808                           	opt stack 23
  3809  000E62                     int_func:
  3810                           	opt stack 23
  3811  000E62  0006               	pop		; remove dummy address from shadow register refresh
  3812  000E64  CFE9 F017          	movff	fsr0l,??_i2cISR+2
  3813  000E68  CFEA F018          	movff	fsr0h,??_i2cISR+3
  3814  000E6C  CFE1 F019          	movff	fsr1l,??_i2cISR+4
  3815  000E70  CFE2 F01A          	movff	fsr1h,??_i2cISR+5
  3816  000E74  CFD9 F01B          	movff	fsr2l,??_i2cISR+6
  3817  000E78  CFDA F01C          	movff	fsr2h,??_i2cISR+7
  3818  000E7C  CFF3 F01D          	movff	prodl,??_i2cISR+8
  3819  000E80  CFF4 F01E          	movff	prodh,??_i2cISR+9
  3820  000E84  CFF6 F01F          	movff	tblptrl,??_i2cISR+10
  3821  000E88  CFF7 F020          	movff	tblptrh,??_i2cISR+11
  3822  000E8C  CFF8 F021          	movff	tblptru,??_i2cISR+12
  3823  000E90  CFF5 F022          	movff	tablat,??_i2cISR+13
  3824                           
  3825                           ;interrupts.c: 25: if (PIR2bits.TMR3IF){
  3826  000E94  A2A1               	btfss	4001,1,c	;volatile
  3827  000E96  D007               	goto	i2l155
  3828                           
  3829                           ;interrupts.c: 26: count++;
  3830  000E98  4A51               	infsnz	_count,f,c	;volatile
  3831  000E9A  2A52               	incf	_count+1,f,c	;volatile
  3832                           
  3833                           ;interrupts.c: 27: PIR2bits.TMR3IF = 0;
  3834  000E9C  92A1               	bcf	4001,1,c	;volatile
  3835                           
  3836                           ;interrupts.c: 28: TMR3 = 0x3CAF;
  3837  000E9E  0E3C               	movlw	60
  3838  000EA0  6EB3               	movwf	4019,c	;volatile
  3839  000EA2  0EAF               	movlw	175
  3840  000EA4  6EB2               	movwf	4018,c	;volatile
  3841  000EA6                     i2l155:
  3842  000EA6  C022  FFF5         	movff	??_i2cISR+13,tablat
  3843  000EAA  C021  FFF8         	movff	??_i2cISR+12,tblptru
  3844  000EAE  C020  FFF7         	movff	??_i2cISR+11,tblptrh
  3845  000EB2  C01F  FFF6         	movff	??_i2cISR+10,tblptrl
  3846  000EB6  C01E  FFF4         	movff	??_i2cISR+9,prodh
  3847  000EBA  C01D  FFF3         	movff	??_i2cISR+8,prodl
  3848  000EBE  C01C  FFDA         	movff	??_i2cISR+7,fsr2h
  3849  000EC2  C01B  FFD9         	movff	??_i2cISR+6,fsr2l
  3850  000EC6  C01A  FFE2         	movff	??_i2cISR+5,fsr1h
  3851  000ECA  C019  FFE1         	movff	??_i2cISR+4,fsr1l
  3852  000ECE  C018  FFEA         	movff	??_i2cISR+3,fsr0h
  3853  000ED2  C017  FFE9         	movff	??_i2cISR+2,fsr0l
  3854  000ED6  C016  FFFB         	movff	??_i2cISR+1,pclatu
  3855  000EDA  C015  FFFA         	movff	??_i2cISR,pclath
  3856  000EDE  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3857  000EE0  0011               	retfie		f
  3858  000EE2                     __end_of_i2cISR:
  3859                           	opt stack 0
  3860                           pclatu	equ	0xFFB
  3861                           pclath	equ	0xFFA
  3862                           tblptru	equ	0xFF8
  3863                           tblptrh	equ	0xFF7
  3864                           tblptrl	equ	0xFF6
  3865                           tablat	equ	0xFF5
  3866                           prodh	equ	0xFF4
  3867                           prodl	equ	0xFF3
  3868                           intcon	equ	0xFF2
  3869                           postinc0	equ	0xFEE
  3870                           fsr0h	equ	0xFEA
  3871                           fsr0l	equ	0xFE9
  3872                           wreg	equ	0xFE8
  3873                           fsr1h	equ	0xFE2
  3874                           fsr1l	equ	0xFE1
  3875                           bsr	equ	0xFE0
  3876                           indf2	equ	0xFDF
  3877                           fsr2h	equ	0xFDA
  3878                           fsr2l	equ	0xFD9
  3879                           status	equ	0xFD8
  3880                           pclatu	equ	0xFFB
  3881                           pclath	equ	0xFFA
  3882                           tblptru	equ	0xFF8
  3883                           tblptrh	equ	0xFF7
  3884                           tblptrl	equ	0xFF6
  3885                           tablat	equ	0xFF5
  3886                           prodh	equ	0xFF4
  3887                           prodl	equ	0xFF3
  3888                           intcon	equ	0xFF2
  3889                           postinc0	equ	0xFEE
  3890                           fsr0h	equ	0xFEA
  3891                           fsr0l	equ	0xFE9
  3892                           wreg	equ	0xFE8
  3893                           fsr1h	equ	0xFE2
  3894                           fsr1l	equ	0xFE1
  3895                           bsr	equ	0xFE0
  3896                           indf2	equ	0xFDF
  3897                           fsr2h	equ	0xFDA
  3898                           fsr2l	equ	0xFD9
  3899                           status	equ	0xFD8
  3900                           
  3901                           	psect	rparam
  3902  0000                     pclatu	equ	0xFFB
  3903                           pclath	equ	0xFFA
  3904                           tblptru	equ	0xFF8
  3905                           tblptrh	equ	0xFF7
  3906                           tblptrl	equ	0xFF6
  3907                           tablat	equ	0xFF5
  3908                           prodh	equ	0xFF4
  3909                           prodl	equ	0xFF3
  3910                           intcon	equ	0xFF2
  3911                           postinc0	equ	0xFEE
  3912                           fsr0h	equ	0xFEA
  3913                           fsr0l	equ	0xFE9
  3914                           wreg	equ	0xFE8
  3915                           fsr1h	equ	0xFE2
  3916                           fsr1l	equ	0xFE1
  3917                           bsr	equ	0xFE0
  3918                           indf2	equ	0xFDF
  3919                           fsr2h	equ	0xFDA
  3920                           fsr2l	equ	0xFD9
  3921                           status	equ	0xFD8
  3922                           
  3923                           	psect	temp
  3924  00005D                     btemp:
  3925                           	opt stack 0
  3926  00005D                     	ds	1
  3927  0000                     int$flags	set	btemp
  3928                           pclatu	equ	0xFFB
  3929                           pclath	equ	0xFFA
  3930                           tblptru	equ	0xFF8
  3931                           tblptrh	equ	0xFF7
  3932                           tblptrl	equ	0xFF6
  3933                           tablat	equ	0xFF5
  3934                           prodh	equ	0xFF4
  3935                           prodl	equ	0xFF3
  3936                           intcon	equ	0xFF2
  3937                           postinc0	equ	0xFEE
  3938                           fsr0h	equ	0xFEA
  3939                           fsr0l	equ	0xFE9
  3940                           wreg	equ	0xFE8
  3941                           fsr1h	equ	0xFE2
  3942                           fsr1l	equ	0xFE1
  3943                           bsr	equ	0xFE0
  3944                           indf2	equ	0xFDF
  3945                           fsr2h	equ	0xFDA
  3946                           fsr2l	equ	0xFD9
  3947                           status	equ	0xFD8


Data Sizes:
    Strings     57
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     80      92
    BANK0           128     24      24
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 20
		 -> writeVal@buffer(BANK0[20]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    sp__ultoa	PTR unsigned char  size(2) Largest target is 20
		 -> writeVal@buffer(BANK0[20]), 

    writeStr@str	PTR unsigned char  size(2) Largest target is 20
		 -> writeVal@buffer(BANK0[20]), STR_9(CODE[5]), STR_8(CODE[5]), STR_7(CODE[10]), 
		 -> STR_6(CODE[6]), STR_5(CODE[7]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 

    main@capstat	PTR unsigned char  size(2) Largest target is 2
		 -> fdcRead@val(COMRAM[2]), adcRead@val(COMRAM[2]), 

    i2cStart@input	PTR unsigned char  size(2) Largest target is 4
		 -> fdcReset@cap_w(COMRAM[4]), fdcSleep@cap_w(COMRAM[4]), fdcInit@cap_w(COMRAM[4]), fdcRead@header(COMRAM[2]), 

    fdcMeas@buf	PTR unsigned char  size(2) Largest target is 2
		 -> fdcRead@val(COMRAM[2]), 

    fdcWrite@input	PTR unsigned char  size(2) Largest target is 4
		 -> fdcReset@cap_w(COMRAM[4]), fdcSleep@cap_w(COMRAM[4]), fdcInit@cap_w(COMRAM[4]), 

    sp__fdcRead	PTR unsigned char  size(2) Largest target is 2
		 -> fdcRead@val(COMRAM[2]), 

    sp__adcRead	PTR unsigned char  size(2) Largest target is 2
		 -> adcRead@val(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_delay
    _fdcReset->_fdcWrite
    _fdcMeas->_writeVal
    _fdcSleep->_fdcWrite
    _fdcRead->_i2cStart
    _fdcInit->_fdcWrite
    _fdcWrite->_i2cStart
    _i2cStart->_i2cIdle
    _delay->___ftge
    _writeVal->_ultoa
    _writeStr->_writeChar
    _ultoa->___lldiv
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftge->___ftmul

Critical Paths under _i2cISR in COMRAM

    None.

Critical Paths under _lowISR in COMRAM

    _lowISR->i1_writeChar

Critical Paths under _main in BANK0

    _main->_writeVal
    _fdcMeas->_writeVal
    _delay->_writeVal

Critical Paths under _i2cISR in BANK0

    None.

Critical Paths under _lowISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _i2cISR in BANK1

    None.

Critical Paths under _lowISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _i2cISR in BANK2

    None.

Critical Paths under _lowISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _i2cISR in BANK3

    None.

Critical Paths under _lowISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _i2cISR in BANK4

    None.

Critical Paths under _lowISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _i2cISR in BANK5

    None.

Critical Paths under _lowISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   26678
                                             20 BANK0      4     4      0
                            _adcRead
                _configureInterrupts
                _configureOscillator
                              _delay
                            _fdcMeas
                            _fdcRead
                           _fdcReset
                            _i2cInit
                           _readChar
                           _uartInit
                          _writeChar
                           _writeStr
                           _writeVal
 ---------------------------------------------------------------------------------
 (1) _uartInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readChar                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2cInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fdcReset                                             4     4      0    1541
                                             45 COMRAM     4     4      0
                           _fdcWrite
 ---------------------------------------------------------------------------------
 (1) _fdcMeas                                             11     9      2    9682
                                             64 COMRAM    11     9      2
                            _fdcInit
                            _fdcRead
                           _fdcSleep
                          _writeChar
                           _writeStr
                           _writeVal
 ---------------------------------------------------------------------------------
 (2) _fdcSleep                                             4     4      0    1541
                                             45 COMRAM     4     4      0
                           _fdcWrite
 ---------------------------------------------------------------------------------
 (1) _fdcRead                                              9     7      2    1055
                                             43 COMRAM     9     7      2
                            _i2cIdle
                           _i2cStart
 ---------------------------------------------------------------------------------
 (2) _fdcInit                                              4     4      0    2266
                                             45 COMRAM     4     4      0
                           _fdcWrite
 ---------------------------------------------------------------------------------
 (2) _fdcWrite                                             2     0      2    1393
                                             43 COMRAM     2     0      2
                            _i2cIdle
                           _i2cStart
 ---------------------------------------------------------------------------------
 (3) _i2cStart                                             8     5      3     746
                                             35 COMRAM     8     5      3
                            _i2cIdle
 ---------------------------------------------------------------------------------
 (4) _i2cIdle                                              1     1      0       0
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay                                               11     8      3    9632
                                             69 COMRAM    11     8      3
                             ___ftge
                            ___ftmul
                           ___lwtoft
                           _writeVal
 ---------------------------------------------------------------------------------
 (1) _writeVal                                            24    20      4    3509
                                             60 COMRAM     4     0      4
                                              0 BANK0     20    20      0
                              _ultoa
                           _writeStr
 ---------------------------------------------------------------------------------
 (2) _writeStr                                             5     3      2     931
                                             35 COMRAM     5     3      2
                          _writeChar
 ---------------------------------------------------------------------------------
 (3) _writeChar                                            1     1      0      31
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ultoa                                               13     5      8    1774
                                             47 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     386
                                             34 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             34 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2452
                                             42 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3100
                                             45 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2344
                                             34 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     352
                                             60 COMRAM     9     3      6
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _configureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              6     4      2      71
                                             34 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _lowISR                                              19    19      0      22
                                              1 COMRAM    19    19      0
                        i1_writeChar
 ---------------------------------------------------------------------------------
 (7) i1_writeChar                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _i2cISR                                              14    14      0       0
                                             20 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcRead
   _configureInterrupts
   _configureOscillator
   _delay
     ___ftge
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _writeVal
       _ultoa
         ___lldiv
         ___llmod
       _writeStr
         _writeChar
   _fdcMeas
     _fdcInit
       _fdcWrite
         _i2cIdle
         _i2cStart
           _i2cIdle
     _fdcRead
       _i2cIdle
       _i2cStart
         _i2cIdle
     _fdcSleep
       _fdcWrite
         _i2cIdle
         _i2cStart
           _i2cIdle
     _writeChar
     _writeStr
       _writeChar
     _writeVal
       _ultoa
         ___lldiv
         ___llmod
       _writeStr
         _writeChar
   _fdcRead
     _i2cIdle
     _i2cStart
       _i2cIdle
   _fdcReset
     _fdcWrite
       _i2cIdle
       _i2cStart
         _i2cIdle
   _i2cInit
   _readChar
   _uartInit
   _writeChar
   _writeStr
     _writeChar
   _writeVal
     _ultoa
       ___lldiv
       ___llmod
     _writeStr
       _writeChar

 _lowISR (ROOT)
   i1_writeChar

 _i2cISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     18      18       5       18.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     50      5C       1       73.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      74      15        0.0%
DATA                 0      0      74       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Apr 11 16:55:24 2016

                 _SSPSTATbits 000FC7                            l22 1050                            l64 0CFA  
                          l65 0D40                            l83 0682                            bsr 000FE0  
                 __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                   __CFG_LVP$ON 000000  
                         l250 0C3C                           l249 0CB6                           l283 118E  
                         l536 0B4E                           l661 0E50                           l718 09A8  
                         l671 0FB2                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         prod 000FF3                           wreg 000FE8           __end_ofi1_writeChar 11A4  
                 main@capstat 0095                  __CFG_WDT$OFF 000000                          l2103 0FEC  
                        l2203 0B1C                          l2115 0E02                          l2205 0B3A  
                        l2117 0E0E                          l2207 0B44                          l2127 0E42  
                        l2119 0E12                          l2143 0FA4                          l2135 0F70  
                        l2137 0F7C                          l2323 0A1C                          l2139 0F80  
                        l2163 08E6                          l2155 0EE8                          l2243 0CF2  
                        l2341 0A5E                          l2317 09F4                          l2173 093E  
                        l2191 0AD0                          l2351 0A86                          l2159 0F22  
                        l2503 07E4                          l2337 0A4E                          l2089 1102  
                        l2097 0FD4                          l2513 082C                          l2363 0D80  
                        l2195 0ADE                          l2347 0A76                          l2373 0DDC  
                        l2197 0AE8                          l2533 08BC                          l2509 0804  
                        l2367 0DB0                          l2199 0B06                          l2447 07C0  
                        l2529 08AC                          l2397 0660                          l1937 117E  
                        STR_1 0618                          STR_2 0624                          STR_3 0612  
                        STR_4 061E                          STR_5 060B                          STR_6 062A  
                        STR_7 0601                          STR_8 0635                          STR_9 0630  
                        u1260 110C                          u1360 0F1C                          u1521 09DC  
                        u1370 0F56                          u1268 110E                          u1541 0A04  
                        u1367 0F12                          u1377 0F4C                          _TMR3 000FB2  
                        _TRMT 007D61                   i2cStart@len 0026                          _data 0057  
                        _garb 005A                          _main 07D4                  ___ftpack@arg 0023  
                ___ftpack@exp 0026                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          btemp 005D  
                        pclat 000FFA                          prodh 000FF4                          prodl 000FF3  
                        start 013A                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___ftmul@cntr 003B               __end_of_i2cIdle 111C                  ___param_bank 000010  
                ___ftmul@sign 003C               __end_of_i2cInit 117E                         ?_main 0001  
             __end_of_adcRead 106A                         _BRG16 007DC3               __end_of___lldiv 0E62  
               fdcReset@cap_w 002E               __end_of___ftmul 0AC0               __end_of___llmod 0FC4  
                       _T3CON 000FB1                         i1l170 00F2                         i1l159 007A  
                       i1l168 00EE                         i1l283 119A                         i2l155 0EA6  
                       _RCREG 000FAE               __end_of_fdcMeas 07D4               __end_of_fdcInit 0C18  
             __end_of_fdcRead 0D50                         _SPBRG 000FAF                         _TXREG 000FAD  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 fdcSleep@cap_w 002E                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _delay 0C18                         _count 0051                 ___ftpack@sign 0027  
                       _ultoa 08D6                         tablat 000FF5                         status 000FD8  
              __CFG_PBADEN$ON 000000               __initialization 10E8                  __end_of_main 08D6  
            __end_of_i2cStart 1008   __end_of_configureInterrupts 1150                        ??_main 0094  
                 i1_writeChar 1198                 __activetblptr 000002                        ?_delay 0046  
            ___llmod@dividend 0023                        _ADRESH 000FC4                        _ADRESL 000FC3  
            __end_of___ftpack 0B6E                        ?_ultoa 0030                        i1l2011 0088  
                      i1l2003 0074                        i1l2017 00C8                        i1l1997 0068  
 __end_of_configureOscillator 1136              __end_of___lwtoft 108E                        _SPBRGH 000FB0  
            __end_of_fdcReset 10CA              __end_of_fdcSleep 10E8                        _SSPADD 000FC8  
                      _SSPBUF 000FC9                     ??_i2cIdle 0023              __end_of_fdcWrite 1168  
                   ??_i2cInit 0023                        _i2cISR 0008                __CFG_XINST$OFF 000000  
                      ___ftge 0D50                     ??_adcRead 0025                __CFG_STVREN$ON 000000  
                   ??___lldiv 002B                     ??___ftmul 0034                 i2cStart@input 0024  
                   ??___llmod 002B              __end_of_readChar 118C                     ??_fdcMeas 0043  
                   ??_fdcInit 002E                     ??_fdcRead 002E                        _lowISR 0018  
                      delay@i 004B                        clear_0 10EE         ___ftmul@f3_as_product 0038  
            __end_of_uartInit 10AC                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                        ultoa@c 003C  
                      ultoa@v 0038              __end_of_writeVal 103A              __end_of_writeStr 0F5E  
                  __accesstop 0080       __end_of__initialization 10F4                    ___ftge@ff1 003D  
                  ___ftge@ff2 0040                 ___rparam_used 000001                 fdcWrite@input 002C  
                  ___ftmul@f1 002E                    ___ftmul@f2 0031                __pcstackCOMRAM 0001  
               __end_of_delay 0CBE                 __end_of_ultoa 09CC                    ___lwtoft@c 002B  
                  adcRead@val 0027               __CFG_OSC$INTIO7 000000                       ??_delay 0049  
                     ??_ultoa 0038                     ?_i2cStart 0024                       ?_i2cISR 0001  
                     ?___ftge 003D                       ?_lowISR 0001                     ?___ftpack 0023  
                   ?___lwtoft 002B                     ?_fdcReset 0001                     ?_fdcSleep 0001  
                   ?_fdcWrite 002C                    fdcMeas@buf 004A                    fdcMeas@rdy 0049  
                  fdcRead@ack 0032                    fdcRead@reg 002F                    fdcRead@val 005B  
                     _SSPCON2 000FC5                    ??_i2cStart 0027                     ?_readChar 0001  
                     _i2cIdle 1102                       _i2cInit 1168            __size_of_writeChar 000C  
             __size_of_i2cISR 0EDA                       __Hparam 0000                       __Lparam 0000  
                   ?_uartInit 0001               __size_of___ftge 0090                       _adcRead 103A  
                     ___lldiv 0DE0                       ___ftmul 09CC                       ___llmod 0F5E  
                     _adcflag 0054                  __psmallconst 0600                       _b_error 0055  
                     _ackflag 0053                       _fdcMeas 063C                       _fdcInit 0B6E  
                     _fdcRead 0CBE                       __pcinit 10E8               __size_of_lowISR 0122  
                  ??___ftpack 0028                       __ramtop 0600                       __ptext0 07D4  
                     __ptext1 108E                       __ptext2 117E                       __ptext3 1168  
                     __ptext4 10AC                       __ptext5 063C                       __ptext6 10CA  
                     __ptext7 0CBE                       __ptext8 0B6E                       __ptext9 1150  
                     _en_read 0059                     ?_writeVal 003D                     ?_writeStr 0024  
                ?i1_writeChar 0001                       _con_sen 0056                    ??___lwtoft 002E  
                  ??_fdcReset 002E                    ??_fdcSleep 002E                       delay@t1 004D  
                     delay@t2 004F                    ??_fdcWrite 002E                     _T3CONbits 000FB1  
                     main@cmd 0097                __pintcode_body 0E62          end_of_initialization 10F4  
                  ??_readChar 0023                 __Lmediumconst 0000                       int_func 0E62  
             ___lldiv@divisor 0027               ___lldiv@counter 002F                    ??_uartInit 0023  
                   _RCSTAbits 000FAB                       postinc0 000FEE                  fdcInit@cap_w 002E  
                   _PORTAbits 000F80                    ??_writeVal 0041                    ??_writeStr 0026  
           __end_of_writeChar 1198                     _TRISAbits 000F92                     _TRISCbits 000F94  
__size_of_configureInterrupts 001A                     i2cStart@i 002A                     _TXSTAbits 000FAC  
__size_of_configureOscillator 001A                __end_of_i2cISR 0EE2                   ___ftmul@exp 0037  
              __end_of___ftge 0DE0                __end_of_lowISR 013A           start_initialization 10E8  
             ___llmod@divisor 0027             __size_of_i2cStart 0044               ___llmod@counter 002B  
                    ??_i2cISR 0015                adcRead@channel 0026                      ??___ftge 0043  
            __CFG_LPT1OSC$OFF 000000                      ??_lowISR 0002             __size_of___ftpack 00AE  
                 __pbssCOMRAM 0051          __size_ofi1_writeChar 000C             __size_of___lwtoft 0024  
               __pcstackBANK0 0080                  i1writeChar@c 0001             __size_of_fdcReset 001E  
           __size_of_fdcSleep 001E             __size_of_fdcWrite 0018                      ?_i2cIdle 0001  
                    ?_i2cInit 0001             __size_of_readChar 000E             __CFG_CCP2MX$PORTC 000000  
                   __pintcode 0008                      ?_adcRead 0023                      ?___lldiv 0023  
                    ?___ftmul 002E                      ?___llmod 0023             __size_of_uartInit 001E  
                    ?_fdcMeas 0041                      ?_fdcInit 0001                      ?_fdcRead 002C  
                 __pintcodelo 0018                   __smallconst 0600             __size_of_writeVal 0032  
           __size_of_writeStr 007C                __size_of_delay 00A6                __size_of_ultoa 00F6  
                   delay@done 004C                      _IPR1bits 000F9F                      _IPR2bits 000FA2  
                    _PIE1bits 000F9D                      _PIE2bits 000FA0                      i1u111_20 0092  
                    i1u112_20 00A8                      i1u111_28 0094                      i1u113_20 00B4  
                    i1u112_28 00AA                      i1u114_20 00B6                      i1u116_20 00DC  
                    i1u116_28 00DE                      _PIR1bits 000F9E                      _PIR2bits 000FA1  
         _configureInterrupts 1136                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                 writeVal@val 003D                    _ADCON0bits 000FC2                    _ADCON1bits 000FC1  
                  _ADCON2bits 000FC0                   writeStr@str 0024          ?_configureInterrupts 0001  
         _configureOscillator 111C                     _writeChar 118C                      _i2cStart 0FC4  
            __size_of_i2cIdle 001A              __size_of_i2cInit 0016                      __Hrparam 0000  
        ?_configureOscillator 0001                      __Lrparam 0000            __CFG_BOREN$SBORDIS 000000  
            __size_of_adcRead 0030              __size_of___lldiv 0082              __size_of___ftmul 00F4  
            __size_of___llmod 0066                      ___ftpack 0AC0              __size_of_fdcMeas 0198  
            __size_of_fdcInit 00AA              __size_of_fdcRead 0092                      ___lwtoft 106A  
                    _fdcReset 10AC                      _fdcSleep 10CA                      _fdcWrite 1150  
       ??_configureInterrupts 0023                      _data_rdy 0058                    ?_writeChar 0001  
                    __ptext10 0FC4                      __ptext11 1102                      __ptext20 09CC  
                    __ptext12 0C18                      __ptext21 0AC0                      __ptext13 1008  
                    __ptext22 0D50                      __ptext14 0EE2                      __ptext23 111C  
                    __ptext15 118C                      __ptext24 1136                      __ptext16 08D6  
                    __ptext25 103A                      __ptext17 0F5E                      __ptext18 0DE0  
                    __ptext27 1198                      __ptext19 106A                      fdcMeas@i 0047  
                    fdcRead@i 0034                      _readChar 117E                 __size_of_main 0102  
                    delay@sec 0046                fdcMeas@samples 0041         ??_configureOscillator 0023  
                  writeChar@c 0023                      _uartInit 108E                      int$flags 005D  
                    _writeVal 1008                      _writeStr 0EE2                   _OSCTUNEbits 000F9B  
                  _INTCONbits 000FF2                     ultoa@base 0036                      intlevel1 0000  
                    intlevel2 0000              ___lldiv@dividend 0023                    _OSCCONbits 000FD3  
                   writeStr@i 0028                 ??i1_writeChar 0001                      ultoa@buf 0030  
                    ultoa@val 0032                writeVal@buffer 0080              ___lldiv@quotient 002B  
                 _SSPCON1bits 000FC6                   _SSPCON2bits 000FC5                   ??_writeChar 0023  
               fdcRead@header 0030  
